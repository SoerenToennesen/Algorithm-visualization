{"version":3,"sources":["SearchAlgorithms/components/helperfunctions.tsx","SearchAlgorithms/BFS.tsx","SearchAlgorithms/DFS.tsx","SearchAlgorithms/GBFS.tsx","SearchAlgorithms/AStar.tsx","index.tsx"],"names":["alreadyDiscovered","discovered","nodeToCheck","i","length","toString","getFullDataSearch","fullSearchData","goal","pathTemp","pathFound","findNext","push","j","Number","MIN_SAFE_INTEGER","BFS","graph","currentNodes","targetNode","found","directions","nextNodes","depth","DFS","view","chosenDirection","GBFS","bestDirection","MAX_SAFE_INTEGER","h","Math","abs","AStar","f","legend","dropdownPicked","startSelected","goalSelected","colorOfRange","goalColor","className","footer","start","pickTargets","hoverBox","style","position","height","width","marginTop","marginLeft","top","left","backgroundColor","borderRadius","display","zIndex","drawStartAndGoal","startOrGoal","isGoal","animation","drawSearch","positions","isFade","map","entry","elem","drawPath","App","useState","phase","setPhase","setDropdownPicked","setStartSelected","setGoalSelected","setHoverBox","setStart","setGoal","setFullSearchData","setPositions","positionsPath","setPositionsPath","alreadyDrawn","setAlreadyDrawn","alreadyDrawnPath","setAlreadyDrawnPath","path","setPath","setPathFound","drawn","setDrawn","setColorOfRange","setGoalColor","drawingDone","setDrawingDone","click","setClick","dropdownAlgorithms","setDropdownAlgorithms","dropdownDatastructures","setDropdownDatastructures","clickAlgo","clickDatastruct","algoOrDatastruct","setAlgoOrDatastruct","onmouseup","e","clientY","floor","clientX","onmousemove","range","maxWidth","max","document","documentElement","clientWidth","window","innerWidth","minHeight","maxHeight","clientHeight","innerHeight","fullDataSearchTemp","reverse","k","useEffect","interval","setInterval","clearInterval","alreadyDrawnTempPath","l","posPath","alreadyDrawnTemp","pos","onClick","onMouseEnter","onMouseLeave","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4de3552e.chunk.js","sourcesContent":["\r\n\r\n\r\nexport function alreadyDiscovered(discovered: number[][], nodeToCheck: number[]): boolean {\r\n    for (var i = 0; i < discovered.length; i++) {\r\n        if (discovered[i].toString() === nodeToCheck.toString()) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getFullDataSearch(fullSearchData: number[][][], goal: number[]) : number[][] {\r\n    var pathTemp: number[][] = [];\r\n    var pathFound: boolean = false;\r\n    var findNext = goal;\r\n    for (var i = fullSearchData.length - 1; i >= 0; i--) {\r\n        if (i === fullSearchData.length - 1) pathTemp.push(goal);\r\n        if (pathFound) break;\r\n        for (var j = 0; j < fullSearchData[i].length; j++) {\r\n          if (fullSearchData[i][j][0] === findNext[0] && fullSearchData[i][j][1] === findNext[1]) {\r\n            if (fullSearchData[i][j][2] === Number.MIN_SAFE_INTEGER) {\r\n              pathFound = true;\r\n              break;\r\n            }\r\n            pathTemp.push([fullSearchData[i][j][2], fullSearchData[i][j][3]])\r\n            findNext = [fullSearchData[i][j][2], fullSearchData[i][j][3]];\r\n            break;\r\n          }\r\n        }\r\n    }\r\n    return pathTemp;\r\n}","import {alreadyDiscovered} from './components/helperfunctions';\r\n\r\n//BFS building the lookup matrix\r\n//currentNodes stores both the current node and it's parent node (first 2 index = current, last 2 index = parent)\r\nexport function BFS(graph: number[][][], currentNodes: number[][], targetNode: number[],\r\n            discovered: number[][], found: boolean): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (var i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        for (var j = 0; j < directions.length; j++) {\r\n            nextNodes.push([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        }\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return BFS(graph, nextNodes, targetNode, discovered, found);\r\n}\r\n","import {alreadyDiscovered} from './components/helperfunctions';\r\n\r\nexport function DFS(graph: number[][][], currentNodes: number[][], targetNode: number[],\r\n            discovered: number[][], found: boolean, view: number[]): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    /*if (depth > 5000) { // currently a safety measure to not search too deep\r\n        return graph;\r\n    }*/\r\n    for (var i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var chosenDirection: number = -1;\r\n        for (var j = 0; j < directions.length; j++) {\r\n            if ((alreadyDiscovered(discovered, [currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]])) ||\r\n                ((currentNodes[i][0] + directions[j][0] <= view[0] || currentNodes[i][0] + directions[j][0] >= view[1]) || \r\n                (currentNodes[i][1] + directions[j][1] <= view[2] || currentNodes[i][1] + directions[j][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                continue;\r\n            } else {\r\n                chosenDirection = j;\r\n                break;\r\n            }\r\n        }\r\n        if (chosenDirection === -1) {\r\n            //depth is exhausted, try a different depth. Current just return this as a dead end\r\n            return graph;\r\n        }\r\n        nextNodes.push([currentNodes[i][0] + directions[chosenDirection][0], currentNodes[i][1] + directions[chosenDirection][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return DFS(graph, nextNodes, targetNode, discovered, found, view);\r\n}\r\n","import {alreadyDiscovered} from './components/helperfunctions';\r\n\r\nexport function GBFS(graph: number[][][], currentNodes: number[][], targetNode: number[],\r\n            discovered: number[][], found: boolean): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (var i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var bestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1];\r\n        for (var j = 0; j < directions.length; j++) {\r\n            var h: number = Math.abs(currentNodes[i][0] + directions[j][0] - targetNode[0]) + \r\n                            Math.abs(currentNodes[i][1] + directions[j][1] - targetNode[1]);\r\n            if (h < bestDirection[0]) bestDirection = [h, j];\r\n        }\r\n        nextNodes.push([currentNodes[i][0] + directions[bestDirection[1]][0], currentNodes[i][1] + directions[bestDirection[1]][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return GBFS(graph, nextNodes, targetNode, discovered, found);\r\n}\r\n","import {alreadyDiscovered} from './components/helperfunctions';\r\n\r\nexport function AStar(graph: number[][][], currentNodes: number[][], targetNode: number[],\r\n            discovered: number[][], found: boolean): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (var i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var bestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1];\r\n        for (var j = 0; j < directions.length; j++) {\r\n            var g: number = depth + 1;\r\n            var h: number = Math.abs(currentNodes[i][0] + directions[j][0] - targetNode[0]) + \r\n                            Math.abs(currentNodes[i][1] + directions[j][1] - targetNode[1]);\r\n            var f: number = g + h;\r\n            if (f < bestDirection[0]) bestDirection = [f, j];\r\n        }\r\n        nextNodes.push([currentNodes[i][0] + directions[bestDirection[1]][0], currentNodes[i][1] + directions[bestDirection[1]][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return AStar(graph, nextNodes, targetNode, discovered, found);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport {BFS} from './SearchAlgorithms/BFS';\r\nimport {DFS} from './SearchAlgorithms/DFS';\r\nimport {GBFS} from './SearchAlgorithms/GBFS';\r\nimport {AStar} from './SearchAlgorithms/AStar';\r\nimport {getFullDataSearch} from './SearchAlgorithms/components/helperfunctions';\r\n\r\n\r\n\r\nfunction legend(dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, colorOfRange: number, goalColor: number) {\r\n  return (\r\n      <div className=\"legend-container\">\r\n        <div className=\"legend-title\">\r\n          Legend\r\n        </div>\r\n        {dropdownPicked && !startSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n            &nbsp;Select start node\r\n        </div>\r\n        : null}\r\n        {startSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n            &nbsp;Start node\r\n        </div>\r\n        : null}\r\n        {startSelected && !goalSelected ? \r\n        (colorOfRange === 0 ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color2\"><i className='fas fa-square'/></div>\r\n            &nbsp;Select goal node (green light)\r\n        </div> \r\n        : (colorOfRange === 1 ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color3\"><i className='fas fa-square'/></div>\r\n            &nbsp;Select goal node (computationally hard)\r\n        </div> \r\n        : \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color4\"><i className='fas fa-square'/></div>\r\n            &nbsp;Select goal node (restricted)\r\n        </div>))\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className={goalColor === 0 ? \"legend-color2\" : (goalColor === 1 ? \"legend-color3\" : \"legend-color4\")}><i className='fas fa-square'/></div>\r\n            &nbsp;Goal node\r\n        </div>\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color5\"><i className='fas fa-square'/></div>\r\n            &nbsp;Search\r\n        </div>\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color6\"><i className='fas fa-square'/></div>\r\n            &nbsp;Path found\r\n        </div>\r\n        : null}\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction todo() {\r\n  return (\r\n      <div className=\"todo-container\">\r\n        <div className=\"todo-title\">\r\n          Todo list\r\n        </div>\r\n        <div className=\"todo-info\">\r\n          <i className='fas fa-check'/>\r\n            &nbsp;Implement drawable walls\r\n        </div>\r\n        <div className=\"todo-info\">\r\n          <i className='fas fa-check'/>\r\n            &nbsp;Implement weighted nodes\r\n        </div>\r\n        <div className=\"todo-info\">\r\n          <i className='fas fa-check'/>\r\n            &nbsp;Implement swarm algorithm\r\n        </div>\r\n        <div className=\"todo-info\">\r\n          <i className='fas fa-check'/>\r\n            &nbsp;Implement data structures\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction footer(dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, start: number[], goal: number[]) {\r\n  return (\r\n      <footer className=\"footer-container\">\r\n        {!dropdownPicked ?\r\n        <div className=\"footer-info\">\r\n          Select an algorithm or datastructure\r\n        </div> : null}\r\n        {!startSelected && dropdownPicked?\r\n        <div className=\"footer-info\">\r\n          Select your start node\r\n        </div> : null}\r\n        {startSelected && !goalSelected ?\r\n        <div className=\"footer-info\">\r\n          Select your goal node\r\n        </div> : null}\r\n        {startSelected && goalSelected ?\r\n        <div className=\"footer-inf-nowiggle\">\r\n          Enjoy the show!\r\n        </div> : null}\r\n      </footer>\r\n  )\r\n}\r\n\r\n\r\nfunction pickTargets(hoverBox: number[], startSelected: boolean, colorOfRange: number) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        height: \"15px\",\r\n        width: \"15px\",\r\n        marginTop: `${hoverBox[0]}px`,\r\n        marginLeft: `${hoverBox[1]}px`,\r\n        top: \"3px\",\r\n        left: \"3px\",\r\n        backgroundColor: startSelected ? (colorOfRange === 0 ? \"rgb(49, 158, 63, 0.5)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63, 0.5)\" : \"rgb(221, 63, 63, 0.5)\" ) ) : \"rgb(65,126,238, 0.5)\",\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        zIndex: -1,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction drawStartAndGoal(startOrGoal: number[], isGoal: boolean, colorOfRange: number) {\r\n  return (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: \"15px\",\r\n          width: \"15px\",\r\n          marginLeft: `${startOrGoal[0] * 20}px`,\r\n          marginTop: `${startOrGoal[1] * 20}px`,\r\n          top: \"3px\",\r\n          left: \"3px\",\r\n          backgroundColor: isGoal ? (colorOfRange === 0 ? \"rgb(49, 158, 63)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63)\" : \"rgb(221, 63, 63)\" ) ) : \"rgb(65,126,238)\",\r\n          borderRadius: \"35%\",\r\n          display: \"inline-block\",\r\n          animation: \"fadeMe .2s\",\r\n          zIndex: -0.9,\r\n        }}/>\r\n  );\r\n}\r\n\r\nfunction drawSearch(positions: number[][][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      entry.map(elem => (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: \"15px\",\r\n          width: \"15px\",\r\n          marginLeft: `${elem[0] * 20}px`,\r\n          marginTop: `${elem[1] * 20}px`,\r\n          top: \"3px\",\r\n          left: \"3px\",\r\n          backgroundColor: \"rgb(90, 90, 90)\",\r\n          borderRadius: \"35%\",\r\n          display: \"inline-block\",\r\n          animation: isFade ? \"fadeMe .2s\" : \"\",\r\n          zIndex: -1,\r\n        }}/>\r\n      ))\r\n    ))\r\n  );\r\n}\r\n\r\nfunction drawPath(positions: number[][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      <div style={{\r\n        position: \"absolute\",\r\n        height: \"7.5px\",\r\n        width: \"7.5px\",\r\n        marginLeft: `${entry[0] * 20}px`,\r\n        marginTop: `${entry[1] * 20}px`,\r\n        top: \"6.85px\",\r\n        left: \"6.85px\",\r\n        backgroundColor: \"rgb(240,149,55)\",\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        animation: isFade ? \"fadeMe .2s\" : \"\",\r\n        zIndex: -0.8,\r\n      }}/>\r\n    ))\r\n  );\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n  const [phase, setPhase] = useState(-1);\r\n  const [dropdownPicked, setDropdownPicked] = useState(false);\r\n  const [startSelected, setStartSelected] = useState(false);\r\n  const [goalSelected, setGoalSelected] = useState(false);\r\n  const [hoverBox, setHoverBox] = useState<number[]>([]);\r\n  const [start, setStart] = useState<number []>([]);\r\n  const [goal, setGoal] = useState<number []>([]);\r\n  const [fullSearchData, setFullSearchData] = useState<number[][][]>([]);\r\n  const [positions, setPositions] = useState<number[][][]>([]);\r\n  const [positionsPath, setPositionsPath] = useState<number[][]>([]);\r\n  const [alreadyDrawn, setAlreadyDrawn] = useState<number[][][]>([]);\r\n  const [alreadyDrawnPath, setAlreadyDrawnPath] = useState<number[][]>([]);\r\n  const [path, setPath] = useState<number[][]>([]);\r\n  const [pathFound, setPathFound] = useState(false);\r\n  const [drawn, setDrawn] = useState(false);\r\n  const [colorOfRange, setColorOfRange] = useState(0);\r\n  const [goalColor, setGoalColor] = useState(0);\r\n  const [drawingDone, setDrawingDone] = useState(true);\r\n\r\n  const [click, setClick] = useState(false);\r\n  const [dropdownAlgorithms, setDropdownAlgorithms] = useState(false);\r\n  const [dropdownDatastructures, setDropdownDatastructures] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n  const [clickAlgo, setClickAlgo] = useState(false);\r\n  const [clickDatastruct, setClickDatastruct] = useState(false);\r\n  const [algoOrDatastruct, setAlgoOrDatastruct] = useState<string>(\"Nothing selected\");\r\n\r\n  const onMouseEnterDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(false);\r\n      }\r\n  };\r\n  const onMouseEnterDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(false);\r\n      }\r\n  };\r\n\r\n  //The mouse event listeners are actually still running, causing a lot of rerenders... Figure out a way to turn this off\r\n  if (dropdownPicked) {\r\n    if (!startSelected || !goalSelected) {\r\n      onmouseup = function(e) {\r\n        if (!startSelected && start.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            setStart([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n            setStartSelected(true);\r\n          }\r\n        }\r\n        else if (!goalSelected && goal.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            if (colorOfRange !== 2) {\r\n              var goalColorTemp = colorOfRange;\r\n              setGoalColor(goalColorTemp);\r\n              setGoal([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n              setGoalSelected(true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (!goalSelected && dropdownPicked) {\r\n    onmousemove = function(e) {\r\n      var range: number = Math.abs(Math.floor(e.clientX / 20) - start[0]) + \r\n                          Math.abs(Math.floor(e.clientY / 20) - start[1]);\r\n      if (e.clientY >= 80) {\r\n        if (algoOrDatastruct === \"BFS algorithm selected\") {\r\n          if (range < 10) setColorOfRange(0);\r\n          if (range >= 10 && range < 18) setColorOfRange(1);\r\n          if (range >= 18) setColorOfRange(2);\r\n        } else if (algoOrDatastruct === \"DFS algorithm selected\") {\r\n          setColorOfRange(0);\r\n        } else if (algoOrDatastruct === \"GBFS algorithm selected\") {\r\n          setColorOfRange(0);\r\n        } else if (algoOrDatastruct === \"A* algorithm selected\") {\r\n          setColorOfRange(0);\r\n        }\r\n        \r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20])\r\n      };\r\n    }\r\n  }\r\n\r\n  //Phase controller\r\n  if (!dropdownPicked) {\r\n    if (phase !== 0) {\r\n      setPhase(0);\r\n    }\r\n  } else if (!goalSelected && dropdownPicked) {\r\n    if (phase !== 1) {\r\n      setPhase(1);\r\n    }\r\n  } else if (goalSelected && !pathFound) {\r\n    if (phase !== 2) {\r\n      if (fullSearchData.length === 0 || path.length === 0) {\r\n        const minWidth: number = -1;\r\n        const maxWidth: number = Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) - 19.99) / 20) + 1;\r\n        const minHeight: number = Math.floor(80 / 20) - 1;\r\n        const maxHeight: number = Math.floor((Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0) - 19.99) / 20) + 1;\r\n        if (algoOrDatastruct === \"BFS algorithm selected\") {\r\n          var fullDataSearchTemp: number[][][] = BFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], false);\r\n          setFullSearchData(fullDataSearchTemp);\r\n          var pathTemp: number[][] = getFullDataSearch(fullDataSearchTemp, goal);\r\n          pathTemp = pathTemp.reverse();\r\n          setPath(pathTemp);\r\n          setPathFound(true);\r\n          setPhase(3);\r\n        } else if (algoOrDatastruct === \"DFS algorithm selected\") {\r\n          var fullDataSearchTemp: number[][][] = DFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], false, [minWidth, maxWidth, minHeight, maxHeight]);\r\n          setFullSearchData(fullDataSearchTemp);\r\n          var pathTemp: number[][] = getFullDataSearch(fullDataSearchTemp, goal);\r\n          pathTemp = pathTemp.reverse();\r\n          setPath(pathTemp);\r\n          setPathFound(true);\r\n          setPhase(3);\r\n        } else if (algoOrDatastruct === \"GBFS algorithm selected\") {\r\n          var fullDataSearchTemp: number[][][] = GBFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], false);\r\n          setFullSearchData(fullDataSearchTemp);\r\n          var pathTemp: number[][] = getFullDataSearch(fullDataSearchTemp, goal);\r\n          pathTemp = pathTemp.reverse();\r\n          setPath(pathTemp);\r\n          setPathFound(true);\r\n          setPhase(3);\r\n        } else if (algoOrDatastruct === \"A* algorithm selected\") {\r\n          var fullDataSearchTemp: number[][][] = AStar([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], false);\r\n          setFullSearchData(fullDataSearchTemp);\r\n          var pathTemp: number[][] = getFullDataSearch(fullDataSearchTemp, goal);\r\n          pathTemp = pathTemp.reverse();\r\n          setPath(pathTemp);\r\n          setPathFound(true);\r\n          setPhase(3);\r\n        }\r\n      }\r\n      setPhase(2);\r\n    }\r\n  } else if (pathFound && !drawn) {\r\n    if (phase !== 3) {\r\n      setPhase(3);\r\n    }\r\n  } else if (drawn) {\r\n    if (phase !== 4) {\r\n      //reset to normal\r\n      setPhase(4);\r\n    }\r\n  } else {\r\n    if (phase !== 0) {\r\n      setPhase(0);\r\n    }\r\n  }\r\n\r\n  var i = 0;\r\n  var k = 0;\r\n  useEffect(() => {\r\n    if (pathFound) {\r\n      setDrawingDone(false);\r\n      const interval = setInterval(() => {\r\n        if (i === fullSearchData.length) {\r\n          if (k === path.length) {\r\n            setDrawingDone(true);\r\n            clearInterval(interval);\r\n            return;\r\n          } else {\r\n            if (k > 0) {\r\n              var alreadyDrawnTempPath: number[][] = [];\r\n              for (var l = 0; l < k; l++) {\r\n                alreadyDrawnTempPath[l] = path[l]\r\n              }\r\n              setAlreadyDrawnPath(alreadyDrawnTempPath);\r\n            }\r\n            var posPath: number[][] = [];\r\n            posPath[k] = path[k];\r\n            setPositionsPath(posPath);\r\n            k++;\r\n          }\r\n        } else {\r\n          if (i > 0) {\r\n            var alreadyDrawnTemp: number[][][] = [];\r\n            for (var j = 0; j < i; j++) {\r\n              alreadyDrawnTemp[j] = fullSearchData[j]\r\n            }\r\n            setAlreadyDrawn(alreadyDrawnTemp);\r\n          }\r\n          var pos: number[][][] = [];\r\n          pos[i] = fullSearchData[i];\r\n          setPositions(pos);\r\n          i++;\r\n        }\r\n      }, 2000 / fullSearchData.length);\r\n    }\r\n  }, [pathFound]);\r\n\r\n  function reset() {\r\n    setPhase(-1);\r\n    setDropdownPicked(false);\r\n    setAlgoOrDatastruct(\"Nothing selected\");\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setDrawn(false);\r\n    setColorOfRange(0);\r\n  }\r\n\r\n  //Main render\r\n  return (\r\n    <div className=\"body\">\r\n      <nav className=\"navbar\">\r\n          <a className='navbar-logo'>\r\n              DSA visuals <i className='fas fa-project-diagram'/>\r\n          </a>\r\n          <a className='navbar-selected'>\r\n              {algoOrDatastruct}\r\n          </a>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n              <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownAlgorithms} onMouseLeave={onMouseLeaveDropdownAlgorithms}>\r\n                  <a className='nav-links' onClick={() => setClick(false)}>\r\n                      Algorithms <i className='fas fa-caret-down' />\r\n                  </a>\r\n                  {dropdownAlgorithms && \r\n                  <ul className={clickAlgo ? 'dropdown-menu clicked' : 'dropdown-menu'}>\r\n                      <li>\r\n                          <a className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"BFS algorithm selected\"); setDropdownPicked(true);}}>\r\n                              Breadth-First Search\r\n                          </a>\r\n                      </li>\r\n                      <li>\r\n                          <a className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"DFS algorithm selected\"); setDropdownPicked(true);}}>\r\n                              Depth-First Search\r\n                          </a>\r\n                      </li>\r\n                      <li>\r\n                          <a className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"GBFS algorithm selected\"); setDropdownPicked(true);}}>\r\n                              Greedy Best-First Search\r\n                          </a>\r\n                      </li>\r\n                      <li>\r\n                          <a className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"A* algorithm selected\"); setDropdownPicked(true);}}>\r\n                              A* Search\r\n                          </a>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownDatastructures} onMouseLeave={onMouseLeaveDropdownDatastructures}>\r\n                  <a className='nav-links' onClick={() => setClick(false)}>\r\n                      Data Structures <i className='fas fa-caret-down' />\r\n                  </a>\r\n                  {dropdownDatastructures && \r\n                  <ul className={clickDatastruct ? 'dropdown-menu clicked' : 'dropdown-menu'}>\r\n                      <li>\r\n                          <a className=\"dropdown-link\">\r\n                              Nothing implemented yet\r\n                          </a>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item'>\r\n                  <a className='nav-links-mobile' onClick={() => setClick(false)}>\r\n                      Dropdowns here not yet implemented\r\n                  </a>\r\n              </li>\r\n          </ul>\r\n          <a>\r\n              <button className={drawingDone ? 'btn' : 'bt-done'} onClick={drawingDone ? function() {setClick(false); reset(); } : function() {}}>\r\n                  Reset\r\n              </button>\r\n           </a>\r\n      </nav>\r\n      {footer(dropdownPicked, startSelected, goalSelected, start, goal)}\r\n      {todo()}\r\n      {legend(dropdownPicked, startSelected, goalSelected, colorOfRange, goalColor)}\r\n      {phase === 1 ? pickTargets(hoverBox, startSelected, colorOfRange) : null}\r\n      {startSelected ? drawStartAndGoal(start, false, 0) : null}\r\n      {goalSelected ? drawStartAndGoal(goal, true, goalColor) : null}\r\n      {phase === 3 ? drawSearch(positions, true) : null}\r\n      {phase === 3 ? drawSearch(alreadyDrawn, false) : null}\r\n      {phase === 3 ? drawPath(positionsPath, true) : null}\r\n      {phase === 3 ? drawPath(alreadyDrawnPath, false) : null}   \r\n    </div>\r\n  );\r\n}\r\n\r\n//Boilerplate react render code\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}