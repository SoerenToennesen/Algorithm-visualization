{"version":3,"sources":["SearchAlgorithms/BFS.tsx","index.tsx"],"names":["BFS","graph","currentNodes","targetNode","discovered","found","alreadyDiscovered","nodeToCheck","i","length","toString","directions","nextNodes","push","depth","j","legend","dropdownPicked","startSelected","goalSelected","colorOfRange","goalColor","className","footer","start","goal","pickTargets","hoverBox","style","position","height","width","marginTop","marginLeft","top","left","backgroundColor","borderRadius","display","zIndex","drawStartAndGoal","startOrGoal","isGoal","animation","drawSearch","positions","isFade","map","entry","elem","drawPath","App","useState","phase","setPhase","setDropdownPicked","setStartSelected","setGoalSelected","setHoverBox","setStart","setGoal","fullSearchData","setFullSearchData","setPositions","positionsPath","setPositionsPath","alreadyDrawn","setAlreadyDrawn","alreadyDrawnPath","setAlreadyDrawnPath","path","setPath","pathFound","setPathFound","drawn","setDrawn","setColorOfRange","setGoalColor","click","setClick","dropdownAlgorithms","setDropdownAlgorithms","dropdownDatastructures","setDropdownDatastructures","clickAlgo","clickDatastruct","algoOrDatastruct","setAlgoOrDatastruct","onmouseup","e","clientY","Math","floor","clientX","onmousemove","range","abs","fullDataSearchTemp","Number","MIN_SAFE_INTEGER","pathTemp","findNext","getFullDataSearch","reverse","k","useEffect","interval","setInterval","clearInterval","alreadyDrawnTempPath","l","posPath","alreadyDrawnTemp","pos","onClick","onMouseEnter","window","innerWidth","onMouseLeave","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aacb30a6.chunk.js","sourcesContent":["\r\n\r\n\r\n\r\n  \r\n//BFS building the lookup matrix\r\n//currentNodes stores both the current node and it's parent node (first 2 index = current, last 2 index = parent)\r\nexport function BFS(graph: number[][][], currentNodes: number[][], targetNode: number[],\r\n            discovered: number[][], found: boolean): number[][][] {   \r\n                \r\n    function alreadyDiscovered(discovered: number[][], nodeToCheck: number[]): boolean {\r\n        for (var i = 0; i < discovered.length; i++) {\r\n        if (discovered[i].toString() === nodeToCheck.toString()) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (var i = 0; i < currentNodes.length; i++) { // something wrong with i < currentNodes.length\r\n    if (alreadyDiscovered(discovered, currentNodes[i])) continue;\r\n    if (i === 0) {\r\n        graph[depth][0] = currentNodes[i];\r\n    } else {\r\n        graph[depth].push(currentNodes[i]);\r\n    }\r\n    discovered.push(currentNodes[i]);\r\n    for (var j = 0; j < directions.length; j++) {\r\n        nextNodes.push([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1], currentNodes[i][0], currentNodes[i][1]]);\r\n    }\r\n    if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return BFS(graph, nextNodes, targetNode, discovered, found);\r\n}\r\n\r\n\r\nexport function getFullDataSearch(fullSearchData: number[][][], goal: number[]) : number[][] {\r\n    var pathTemp: number[][] = [];\r\n    var pathFound: boolean = false;\r\n    var findNext = goal;\r\n    for (var i = fullSearchData.length - 1; i >= 0; i--) {\r\n        if (i === fullSearchData.length - 1) pathTemp.push(goal);\r\n        if (pathFound) break;\r\n        for (var j = 0; j < fullSearchData[i].length; j++) {\r\n          if (fullSearchData[i][j][0] === findNext[0] && fullSearchData[i][j][1] === findNext[1]) {\r\n            if (fullSearchData[i][j][2] === Number.MIN_SAFE_INTEGER) {\r\n              pathFound = true;\r\n              break;\r\n            }\r\n            pathTemp.push([fullSearchData[i][j][2], fullSearchData[i][j][3]])\r\n            findNext = [fullSearchData[i][j][2], fullSearchData[i][j][3]];\r\n            break;\r\n          }\r\n        }\r\n    }\r\n    return pathTemp;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport {BFS, getFullDataSearch} from './SearchAlgorithms/BFS';\r\n\r\n\r\n\r\nfunction legend(dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, colorOfRange: number, goalColor: number) {\r\n  return (\r\n      <div className=\"legend-container\">\r\n        <div className=\"legend-title\">\r\n          Legend\r\n        </div>\r\n        {dropdownPicked && !startSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n             Select start node\r\n        </div>\r\n        : null}\r\n        {startSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n            Start node\r\n        </div>\r\n        : null}\r\n        {startSelected && !goalSelected ? \r\n        (colorOfRange === 0 ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color2\"><i className='fas fa-square'/></div>\r\n          Select goal node (green light)\r\n        </div> \r\n        : (colorOfRange === 1 ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color3\"><i className='fas fa-square'/></div>\r\n            Select goal node (computationally hard)\r\n        </div> \r\n        : \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color4\"><i className='fas fa-square'/></div>\r\n            Select goal node (restricted)\r\n        </div>))\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className={goalColor === 0 ? \"legend-color2\" : (goalColor === 1 ? \"legend-color3\" : \"legend-color4\")}><i className='fas fa-square'/></div>\r\n            Goal node\r\n        </div>\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color5\"><i className='fas fa-square'/></div>\r\n            Search\r\n        </div>\r\n        : null}\r\n        {goalSelected ? \r\n        <div className=\"legend-info\">\r\n          <div className=\"legend-color6\"><i className='fas fa-square'/></div>\r\n            Path found\r\n        </div>\r\n        : null}\r\n      </div>\r\n  )\r\n}\r\n\r\nfunction footer(dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, start: number[], goal: number[]) {\r\n  return (\r\n      <footer className=\"footer-container\">\r\n        {!dropdownPicked ?\r\n        <div className=\"footer-info\">\r\n          Select an algorithm or datastructure\r\n        </div> : null}\r\n        {!startSelected && dropdownPicked?\r\n        <div className=\"footer-info\">\r\n          Select your start node\r\n        </div> : null}\r\n        {startSelected && !goalSelected ?\r\n        <div className=\"footer-info\">\r\n          Select your goal node\r\n        </div> : null}\r\n        {startSelected && goalSelected ?\r\n        <div className=\"footer-inf-nowiggle\">\r\n          Enjoy the show!\r\n        </div> : null}\r\n      </footer>\r\n  )\r\n}\r\n\r\n\r\nfunction pickTargets(hoverBox: number[], startSelected: boolean, colorOfRange: number) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        height: \"15px\",\r\n        width: \"15px\",\r\n        marginTop: `${hoverBox[0]}px`,\r\n        marginLeft: `${hoverBox[1]}px`,\r\n        top: \"3px\",\r\n        left: \"3px\",\r\n        backgroundColor: startSelected ? (colorOfRange === 0 ? \"rgb(49, 158, 63, 0.5)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63, 0.5)\" : \"rgb(221, 63, 63, 0.5)\" ) ) : \"rgb(65,126,238, 0.5)\",\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        zIndex: -1,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nfunction drawStartAndGoal(startOrGoal: number[], isGoal: boolean, colorOfRange: number) {\r\n  return (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: \"15px\",\r\n          width: \"15px\",\r\n          marginLeft: `${startOrGoal[0] * 20}px`,\r\n          marginTop: `${startOrGoal[1] * 20}px`,\r\n          top: \"3px\",\r\n          left: \"3px\",\r\n          backgroundColor: isGoal ? (colorOfRange === 0 ? \"rgb(49, 158, 63)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63)\" : \"rgb(221, 63, 63)\" ) ) : \"rgb(65,126,238)\",\r\n          borderRadius: \"35%\",\r\n          display: \"inline-block\",\r\n          animation: \"fadeMe .2s\",\r\n          zIndex: -0.9,\r\n        }}/>\r\n  );\r\n}\r\n\r\nfunction drawSearch(positions: number[][][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      entry.map(elem => (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: \"15px\",\r\n          width: \"15px\",\r\n          marginLeft: `${elem[0] * 20}px`,\r\n          marginTop: `${elem[1] * 20}px`,\r\n          top: \"3px\",\r\n          left: \"3px\",\r\n          backgroundColor: \"rgb(90, 90, 90)\",\r\n          borderRadius: \"35%\",\r\n          display: \"inline-block\",\r\n          animation: isFade ? \"fadeMe .2s\" : \"\",\r\n          zIndex: -1,\r\n        }}/>\r\n      ))\r\n    ))\r\n  );\r\n}\r\n\r\nfunction drawPath(positions: number[][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      <div style={{\r\n        position: \"absolute\",\r\n        height: \"7.5px\",\r\n        width: \"7.5px\",\r\n        marginLeft: `${entry[0] * 20}px`,\r\n        marginTop: `${entry[1] * 20}px`,\r\n        top: \"6.85px\",\r\n        left: \"6.85px\",\r\n        backgroundColor: \"rgb(240,149,55)\",\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        animation: isFade ? \"fadeMe .2s\" : \"\",\r\n        zIndex: -0.8,\r\n      }}/>\r\n    ))\r\n  );\r\n}\r\n\r\n\r\nfunction App() {\r\n\r\n  const [phase, setPhase] = useState(-1);\r\n  const [dropdownPicked, setDropdownPicked] = useState(false);\r\n  const [startSelected, setStartSelected] = useState(false);\r\n  const [goalSelected, setGoalSelected] = useState(false);\r\n  const [hoverBox, setHoverBox] = useState<number[]>([]);\r\n  const [start, setStart] = useState<number []>([]);\r\n  const [goal, setGoal] = useState<number []>([]);\r\n  const [fullSearchData, setFullSearchData] = useState<number[][][]>([]);\r\n  const [positions, setPositions] = useState<number[][][]>([]);\r\n  const [positionsPath, setPositionsPath] = useState<number[][]>([]);\r\n  const [alreadyDrawn, setAlreadyDrawn] = useState<number[][][]>([]);\r\n  const [alreadyDrawnPath, setAlreadyDrawnPath] = useState<number[][]>([]);\r\n  const [path, setPath] = useState<number[][]>([]);\r\n  const [pathFound, setPathFound] = useState(false);\r\n  const [drawn, setDrawn] = useState(false);\r\n  const [colorOfRange, setColorOfRange] = useState(0);\r\n  const [goalColor, setGoalColor] = useState(0);\r\n\r\n  const [click, setClick] = useState(false);\r\n  const [dropdownAlgorithms, setDropdownAlgorithms] = useState(false);\r\n  const [dropdownDatastructures, setDropdownDatastructures] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n  const [clickAlgo, setClickAlgo] = useState(false);\r\n  const [clickDatastruct, setClickDatastruct] = useState(false);\r\n  const [algoOrDatastruct, setAlgoOrDatastruct] = useState<string>(\"Nothing selected\");\r\n\r\n  const onMouseEnterDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(false);\r\n      }\r\n  };\r\n  const onMouseEnterDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(false);\r\n      }\r\n  };\r\n\r\n  //The mouse event listeners are actually still running, causing a lot of rerenders... Figure out a way to turn this off\r\n  if (dropdownPicked) {\r\n    if (!startSelected || !goalSelected) {\r\n      onmouseup = function(e) {\r\n        if (!startSelected && start.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            setStart([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n            setStartSelected(true);\r\n          }\r\n        }\r\n        else if (!goalSelected && goal.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            if (colorOfRange !== 2) {\r\n              var goalColorTemp = colorOfRange;\r\n              setGoalColor(goalColorTemp);\r\n              setGoal([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n              setGoalSelected(true);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (!goalSelected && dropdownPicked) {\r\n    onmousemove = function(e) {\r\n      var range: number = Math.abs(Math.floor(e.clientX / 20) - start[0]) + \r\n                          Math.abs(Math.floor(e.clientY / 20) - start[1]);\r\n      if (e.clientY >= 80) {\r\n        if (range < 10) setColorOfRange(0);\r\n        if (range >= 10 && range < 18) setColorOfRange(1);\r\n        if (range >= 18) setColorOfRange(2);\r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20])\r\n      };\r\n    }\r\n  }\r\n\r\n  //Phase controller\r\n  if (!dropdownPicked) {\r\n    if (phase !== 0) {\r\n      setPhase(0);\r\n    }\r\n  } else if (!goalSelected && dropdownPicked) {\r\n    if (phase !== 1) {\r\n      setPhase(1);\r\n    }\r\n  } else if (goalSelected && !pathFound) {\r\n    if (phase !== 2) {\r\n      if (fullSearchData.length === 0 || path.length === 0) {\r\n        var fullDataSearchTemp: number[][][] = BFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], false);\r\n        setFullSearchData(fullDataSearchTemp);\r\n        var pathTemp: number[][] = getFullDataSearch(fullDataSearchTemp, goal);\r\n        pathTemp = pathTemp.reverse();\r\n        setPath(pathTemp);\r\n        setPathFound(true);\r\n        setPhase(3);\r\n      }\r\n      setPhase(2);\r\n    }\r\n  } else if (pathFound && !drawn) {\r\n    if (phase !== 3) {\r\n\r\n      setPhase(3);\r\n    }\r\n  } else if (drawn) {\r\n    if (phase !== 4) {\r\n      //reset to normal\r\n      setPhase(4);\r\n    }\r\n  } else {\r\n    if (phase !== 0) {\r\n      setPhase(0);\r\n    }\r\n  }\r\n\r\n  var i = 0;\r\n  var k = 0;\r\n  useEffect(() => {\r\n    if (pathFound) {\r\n      const interval = setInterval(() => {\r\n        if (i === fullSearchData.length) {\r\n          if (k === path.length) {\r\n            //setDrawn(true);\r\n            clearInterval(interval);\r\n            return;\r\n          } else {\r\n            if (k > 0) {\r\n              var alreadyDrawnTempPath: number[][] = [];\r\n              for (var l = 0; l < k; l++) {\r\n                alreadyDrawnTempPath[l] = path[l]\r\n              }\r\n              setAlreadyDrawnPath(alreadyDrawnTempPath);\r\n            }\r\n            var posPath: number[][] = [];\r\n            posPath[k] = path[k];\r\n            setPositionsPath(posPath);\r\n            k++;\r\n          }\r\n        } else {\r\n          if (i > 0) {\r\n            var alreadyDrawnTemp: number[][][] = [];\r\n            for (var j = 0; j < i; j++) {\r\n              alreadyDrawnTemp[j] = fullSearchData[j]\r\n            }\r\n            setAlreadyDrawn(alreadyDrawnTemp);\r\n          }\r\n          var pos: number[][][] = [];\r\n          pos[i] = fullSearchData[i];\r\n          setPositions(pos);\r\n          i++;\r\n        }\r\n      }, 100);\r\n    }\r\n  }, [pathFound]);\r\n\r\n  function reset() {\r\n    setPhase(-1);\r\n    setDropdownPicked(false);\r\n    setAlgoOrDatastruct(\"Nothing selected\");\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setDrawn(false);\r\n    setColorOfRange(0);\r\n  }\r\n\r\n  //Main render\r\n  return (\r\n    <div className=\"body\">\r\n      <nav className=\"navbar\">\r\n          <a className='navbar-logo'>\r\n              DSA visuals <i className='fas fa-project-diagram'/>\r\n          </a>\r\n          <a className='navbar-selected'>\r\n              {algoOrDatastruct}\r\n          </a>\r\n          <div className='menu-icon' onClick={handleClick}>\r\n              <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownAlgorithms} onMouseLeave={onMouseLeaveDropdownAlgorithms}>\r\n                  <a className='nav-links' onClick={() => setClick(false)}>\r\n                      Algorithms <i className='fas fa-caret-down' />\r\n                  </a>\r\n                  {dropdownAlgorithms && \r\n                  <ul className={clickAlgo ? 'dropdown-menu clicked' : 'dropdown-menu'}>\r\n                      <li>\r\n                          <a className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"BFS algorithm selected\"); setDropdownPicked(true);}}>\r\n                              Breadth-First Search\r\n                          </a>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownDatastructures} onMouseLeave={onMouseLeaveDropdownDatastructures}>\r\n                  <a className='nav-links' onClick={() => setClick(false)}>\r\n                      Data Structures <i className='fas fa-caret-down' />\r\n                  </a>\r\n                  {dropdownDatastructures && \r\n                  <ul className={clickDatastruct ? 'dropdown-menu clicked' : 'dropdown-menu'}>\r\n                      <li>\r\n                          <a className=\"dropdown-link\">\r\n                              Nothing implemented yet\r\n                          </a>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item'>\r\n                  <a className='nav-links-mobile' onClick={() => setClick(false)}>\r\n                      Dropdowns here not yet implemented\r\n                  </a>\r\n              </li>\r\n          </ul>\r\n          <a>\r\n              <button className='btn' onClick={function() {setClick(false); reset(); }}>\r\n                  Reset\r\n              </button>\r\n           </a>\r\n      </nav>\r\n      {footer(dropdownPicked, startSelected, goalSelected, start, goal)}\r\n      {legend(dropdownPicked, startSelected, goalSelected, colorOfRange, goalColor)}\r\n      {phase === 1 ? pickTargets(hoverBox, startSelected, colorOfRange) : null}\r\n      {startSelected ? drawStartAndGoal(start, false, 0) : null}\r\n      {goalSelected ? drawStartAndGoal(goal, true, goalColor) : null}\r\n      {phase === 3 ? drawSearch(positions, true) : null}\r\n      {phase === 3 ? drawSearch(alreadyDrawn, false) : null}\r\n      {phase === 3 ? drawPath(positionsPath, true) : null}\r\n      {phase === 3 ? drawPath(alreadyDrawnPath, false) : null}   \r\n    </div>\r\n  );\r\n}\r\n\r\n//TODO:\r\n// - make a legend displaying the meaning of different nodes and whatnot\r\n// - make it so you cant select a goal too far from start node, by rendering green/red/orange on the hoverbox\r\n// - make startNode and goalNode stick with different colour\r\n\r\n//Boilerplate react render code\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}