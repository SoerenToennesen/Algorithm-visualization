{"version":3,"sources":["SearchAlgorithms/helperfunctions.tsx","SearchAlgorithms/BFS.tsx","SearchAlgorithms/DFS.tsx","SearchAlgorithms/GBFS.tsx","SearchAlgorithms/AStar.tsx","AlgoSearchAlgorithms/linearsearch.tsx","AlgoSearchAlgorithms/binarysearch.tsx","AlgoSearchAlgorithms/jumpsearch.tsx","SortAlgorithms/mergesort.tsx","SortAlgorithms/quicksort.tsx","SortAlgorithms/bubblesort.tsx","components/legend.tsx","components/footer.tsx","components/drawsearches.tsx","components/drawsorts.tsx","components/drawalgosearches.tsx","index.tsx"],"names":["alreadyDiscovered","discovered","nodeToCheck","i","length","toString","getFullDataSearch","fullSearchData","goal","pathTemp","pathFound","findNext","push","j","Number","MIN_SAFE_INTEGER","BFS","graph","currentNodes","targetNode","waitingNodes","found","walls","weights","view","directions","nextNodes","nextWaitingNodes","Math","round","depth","k","add","DFS","finishedWaiting","nextFinishedWaiting","chosenDirection","chosenWaiting","nothingLeft","breakme","l","nextFinishedwaitingOrNot","GBFS","h","bestDirection","MAX_SAFE_INTEGER","bestFinishedWaiting","abs","secondaryBestDirection","backtrackDirection","AStar","f","linearSearch","searchData","target","iteration","searchDataBuilder","searchDataBuilderInstance","binarySearch","from","to","halfIndex","floor","searchDataBuilderTemp","jumpSearch","jump","intervalFound","iterationAtInterval","iteration2","mergeSort","sortData","sortDataBuilder","finalBuiltData","n","finalBuiltDataTemp","p","sortDataTemp","intermediateSort","pop","sortDataBuilderTemp","toBuild","m","quickSort","dataBuilder","array","startIndex","endIndex","slice","pivotIndexAndArray","pivot","swapTemp","swapTempLast","partition","bubbleSort","indexTo","swap","legend","dropdownPickedSort","sortFinished","searchAlgoFound","isTarget","dropdownPickedSearch","searchTargetSelected","dropdownPicked","startSelected","goalSelected","colorOfRange","goalColor","algoSelectedOption","className","footer","sortFound","algoOrDataStruct","start","pickTargets","hoverBox","style","position","height","width","marginTop","marginLeft","top","left","backgroundColor","borderRadius","display","zIndex","drawStartAndGoal","startOrGoal","isGoal","animation","drawSearch","positions","isFade","map","entry","elem","drawPath","drawWalls","drawWeights","drawSortData","data","bottom","drawAlgoSearch","numbers","screenWidth","Styles","styled","div","props","color","opacity","App","useState","setDropdownPicked","setDropdownPickedSearch","setDropdownPickedSort","dropdownPickedDatastructures","setDropdownPickedDatastructures","setStartSelected","setGoalSelected","setHoverBox","setStart","setGoal","setFullSearchData","fullSortData","setFullSortData","setPositions","positionsPath","setPositionsPath","alreadyDrawn","setAlreadyDrawn","alreadyDrawnPath","setAlreadyDrawnPath","path","setPath","setPathFound","setSortFound","setColorOfRange","setGoalColor","drawingDone","setDrawingDone","setWalls","setWeights","setAlgoSelectedOption","click","setClick","dropdownAlgorithms","setDropdownAlgorithms","dropdownDatastructures","setDropdownDatastructures","dropdownSearchAlgorithms","setDropdownSearchAlgorithms","algoOrDatastruct","setAlgoOrDatastruct","sliderValue","setSliderValue","jumpValue","setJumpValue","setSortData","runSort","setRunSort","setSortFinished","searchNumbers","setSearchNumbers","screenWidthHeight","setScreenWidthHeight","searchTarget","setSearchTarget","setSearchTargetSelected","setSearchAlgoFound","fullAlgoSearchData","setFullAlgoSearchData","algoSearchData","setAlgoSearchData","algoSearchTarget","setAlgoSearchTarget","setIsTarget","resetMouseListeners","onmousedown","onmouseup","onmousemove","includes","e","clientY","max","document","documentElement","clientWidth","window","innerWidth","clientX","e2","remove","walls_temp","weights_temp","range","fullDataSearchTemp","maxWidth","minHeight","maxHeight","clientHeight","innerHeight","reverse","defineSearchNumbers","partialReset","partialSearchReset","partialSortReset","useEffect","interval","setInterval","clearInterval","alreadyDrawnTempPath","posPath","alreadyDrawnTemp","pos","parseInt","builtSortData","x","y","random","searchNumbersTemp","sortDataWithoutIndex","fullSortDataTemp","fullSortDataTempWithIndex","sortDataWithoutIndex2","fullSortDataTemp2","fullSortDataTemp3","onClick","onMouseEnter","onMouseLeave","w","type","min","value","onChange","onInput","sortComponents","fontSize","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5d5f9ab.chunk.js","sourcesContent":["\r\n\r\n\r\nexport function alreadyDiscovered(discovered: number[][], nodeToCheck: number[]): boolean {\r\n    for (var i = 0; i < discovered.length; i++) {\r\n        if (discovered[i].toString() === nodeToCheck.toString()) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function getFullDataSearch(fullSearchData: number[][][], goal: number[]) : number[][] {\r\n    var pathTemp: number[][] = [];\r\n    var pathFound: boolean = false;\r\n    var findNext = goal;\r\n    for (var i = fullSearchData.length - 1; i >= 0; i--) {\r\n        if (i === fullSearchData.length - 1) pathTemp.push(goal);\r\n        if (pathFound) break;\r\n        for (var j = 0; j < fullSearchData[i].length; j++) {\r\n          if (fullSearchData[i][j][0] === findNext[0] && fullSearchData[i][j][1] === findNext[1]) {\r\n            if (fullSearchData[i][j][2] === Number.MIN_SAFE_INTEGER) {\r\n              pathFound = true;\r\n              break;\r\n            }\r\n            pathTemp.push([fullSearchData[i][j][2], fullSearchData[i][j][3]])\r\n            findNext = [fullSearchData[i][j][2], fullSearchData[i][j][3]];\r\n            break;\r\n          }\r\n        }\r\n    }\r\n    return pathTemp;\r\n}","import {alreadyDiscovered} from './helperfunctions';\r\n\r\n//BFS building the lookup matrix\r\n//currentNodes stores both the current node and it's parent node (first 2 index = current, last 2 index = parent)\r\nexport function BFS(graph: number[][][], currentNodes: number[][], targetNode: number[], waitingNodes: number[][], // waiting node is nodes waiting to pass through weighted nodes on the form [nodeX, nodeY, direction, waitingCurrentCount, waitingTargetCount]\r\n            discovered: number[][], found: boolean, walls: number[][], weights: number[][], view: number[]): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    var nextWaitingNodes: number[][] = [];\r\n    var i: number;\r\n    for (i = 0; i < waitingNodes.length; i++) {\r\n        if (waitingNodes[i][3] >= waitingNodes[i][4]) {\r\n            nextNodes.push([waitingNodes[i][0] + directions[waitingNodes[i][2]][0], waitingNodes[i][1] + directions[waitingNodes[i][2]][1], waitingNodes[i][0], waitingNodes[i][1]]);\r\n        } else {\r\n            nextWaitingNodes.push([waitingNodes[i][0], waitingNodes[i][1], waitingNodes[i][2], Math.round((waitingNodes[i][3] + 0.2) * 10) / 10, waitingNodes[i][4]]);\r\n        }\r\n    }\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) {\r\n            continue;\r\n        }\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        if ([currentNodes[i][0], currentNodes[i][1]].toString() !== [currentNodes[i][2], currentNodes[i][3]].toString()) {\r\n            discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        }\r\n        for (var j = 0; j < directions.length; j++) {\r\n            if ((alreadyDiscovered(discovered, [currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]])) ||\r\n                ((currentNodes[i][0] + directions[j][0] <= view[0] || currentNodes[i][0] + directions[j][0] >= view[1]) || \r\n                (currentNodes[i][1] + directions[j][1] <= view[2] || currentNodes[i][1] + directions[j][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                continue;\r\n            }\r\n            var add: boolean = true;\r\n            var k: number;\r\n            for (k = 0; k < walls.length; k++) {\r\n                if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === walls[k].toString()) {\r\n                    add = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (add) {\r\n                for (k = 0; k < weights.length; k++) {\r\n                    if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === [weights[k][0], weights[k][1]].toString()) {\r\n                        nextWaitingNodes.push([currentNodes[i][0], currentNodes[i][1], j, 0.2, weights[k][2]]);\r\n                        add = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (add) {\r\n                nextNodes.push([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1], currentNodes[i][0], currentNodes[i][1]]);\r\n            }\r\n        }\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    if (nextNodes.toString() === [].toString()) {\r\n        return graph;\r\n    }\r\n    return BFS(graph, nextNodes, targetNode, nextWaitingNodes, discovered, found, walls, weights, view);\r\n}\r\n","import {alreadyDiscovered} from './helperfunctions';\r\n\r\nexport function DFS(graph: number[][][], currentNodes: number[][], targetNode: number[], waitingNodes: number[][],\r\n            discovered: number[][], found: boolean, walls: number[][], weights: number[][], view: number[], finishedWaiting: number[][]): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    var nextWaitingNodes: number[][] = [];\r\n    var nextFinishedWaiting: number[][] = [];\r\n    var i: number;\r\n    for (i = 0; i < waitingNodes.length; i++) {\r\n        if (waitingNodes[i][3] >= waitingNodes[i][4]) {\r\n            finishedWaiting.push([waitingNodes[i][0] + directions[waitingNodes[i][2]][0], waitingNodes[i][1] + directions[waitingNodes[i][2]][1], waitingNodes[i][0], waitingNodes[i][1], graph.length - 1]);\r\n        } else {\r\n            nextWaitingNodes.push([waitingNodes[i][0], waitingNodes[i][1], waitingNodes[i][2], Math.round((waitingNodes[i][3] + 0.2) * 10) / 10, waitingNodes[i][4]]);\r\n        }\r\n    }\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var chosenDirection: number = -1;\r\n        var chosenWaiting: number = -1;\r\n        var j: number;\r\n        var k: number;\r\n        var add: boolean;\r\n        for (j = 0; j < directions.length + 1; j++) {\r\n            if (j === directions.length) { // check nextWaitingNodes\r\n                for (k = 0; k < finishedWaiting.length; k++) {\r\n                    chosenDirection = j;\r\n                    chosenWaiting = k;\r\n                    nextFinishedWaiting.push(finishedWaiting[k]);\r\n                }\r\n            } else {\r\n                if ((alreadyDiscovered(discovered, [currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]])) ||\r\n                    ((currentNodes[i][0] + directions[j][0] <= view[0] || currentNodes[i][0] + directions[j][0] >= view[1]) || \r\n                    (currentNodes[i][1] + directions[j][1] <= view[2] || currentNodes[i][1] + directions[j][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                    continue;\r\n                } else {\r\n                    add = true;\r\n                    for (k = 0; k < walls.length; k++) {\r\n                        if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === walls[k].toString()) {\r\n                            add = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (add) {\r\n                        for (k = 0; k < weights.length; k++) {\r\n                            if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === [weights[k][0], weights[k][1]].toString()) {\r\n                                nextWaitingNodes.push([currentNodes[i][0], currentNodes[i][1], j, 0.2, weights[k][2]]);\r\n                                add = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!add) continue;\r\n                    chosenDirection = j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (chosenDirection === -1) {\r\n            //depth is exhausted, try a different depth. Current just return this as a dead end\r\n            var nothingLeft: boolean = true;\r\n            for (j = graph.length - 1; j >= 0; j--) {\r\n                var breakme: boolean = false;\r\n                for (k = 0; k < directions.length; k++) {\r\n                    if ((alreadyDiscovered(discovered, [graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]])) ||\r\n                        ((graph[j][0][0] + directions[k][0] <= view[0] || graph[j][0][0] + directions[k][0] >= view[1]) || \r\n                        (graph[j][0][1] + directions[k][1] <= view[2] || graph[j][0][1] + directions[k][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                        continue;\r\n                    } else {\r\n                        add = true;\r\n                        var l: number;\r\n                        for (l = 0; l < walls.length; l++) {\r\n                            if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === walls[l].toString()) {\r\n                                add = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (add) {\r\n                            for (l = 0; l < weights.length; l++) {\r\n                                if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === [weights[l][0], weights[l][1]].toString()) {\r\n                                    nextWaitingNodes.push([graph[j][0][0], graph[j][0][1], k, 0.2, weights[l][2]]);\r\n                                    add = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!add) continue;\r\n                        nextNodes.push([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1], graph[j][0][0], graph[j][0][1]]);\r\n                        nothingLeft = false;\r\n                        breakme = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (breakme) break;\r\n            }\r\n            if (nothingLeft) return graph;\r\n        } else if (chosenDirection === 4) {\r\n            nextNodes.push([finishedWaiting[chosenWaiting][0], finishedWaiting[chosenWaiting][1], finishedWaiting[chosenWaiting][2], finishedWaiting[chosenWaiting][3]]);\r\n        } else {\r\n            nextNodes.push([currentNodes[i][0] + directions[chosenDirection][0], currentNodes[i][1] + directions[chosenDirection][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        }\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    var nextFinishedwaitingOrNot: boolean = true;\r\n    if (nextFinishedWaiting.toString() === [].toString()) nextFinishedwaitingOrNot = false;\r\n    return DFS(graph, nextNodes, targetNode, nextWaitingNodes, discovered, found, walls, weights, view, nextFinishedwaitingOrNot ? nextFinishedWaiting : finishedWaiting);\r\n}\r\n","import {alreadyDiscovered} from './helperfunctions';\r\n\r\nexport function GBFS(graph: number[][][], currentNodes: number[][], targetNode: number[], waitingNodes: number[][],\r\n            discovered: number[][], found: boolean, walls: number[][], weights: number[][], view: number[]): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    var nextWaitingNodes: number[][] = [];\r\n    var finishedWaiting: number[][] = [];\r\n    var i: number;\r\n    for (i = 0; i < waitingNodes.length; i++) {\r\n        if (waitingNodes[i][3] >= waitingNodes[i][4]) {\r\n            finishedWaiting.push([waitingNodes[i][0] + directions[waitingNodes[i][2]][0], waitingNodes[i][1] + directions[waitingNodes[i][2]][1], waitingNodes[i][0], waitingNodes[i][1], graph.length - 1]);\r\n        } else {\r\n            nextWaitingNodes.push([waitingNodes[i][0], waitingNodes[i][1], waitingNodes[i][2], Math.round((waitingNodes[i][3] + 0.2) * 10) / 10, waitingNodes[i][4]]);\r\n        }\r\n    }\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var bestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1];\r\n        var bestFinishedWaiting: number[] = [];\r\n        var j: number;\r\n        var k: number;\r\n        var h: number;\r\n        var add: boolean;\r\n        for (j = 0; j < finishedWaiting.length; j++) {\r\n            h = Math.abs(finishedWaiting[j][0] - targetNode[0]) + \r\n                            Math.abs(finishedWaiting[j][1] - targetNode[1]);\r\n            if (h <= bestDirection[0]) {\r\n                bestDirection = [h, j, 1];\r\n                bestFinishedWaiting = [finishedWaiting[j][0], finishedWaiting[j][1], finishedWaiting[j][2], finishedWaiting[j][3]];\r\n            };\r\n        }\r\n        for (j = 0; j < directions.length; j++) {\r\n            if ((alreadyDiscovered(discovered, [currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]])) ||\r\n                ((currentNodes[i][0] + directions[j][0] <= view[0] || currentNodes[i][0] + directions[j][0] >= view[1]) || \r\n                (currentNodes[i][1] + directions[j][1] <= view[2] || currentNodes[i][1] + directions[j][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                continue;\r\n            }\r\n            add = true;\r\n            for (k = 0; k < walls.length; k++) {\r\n                if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === walls[k].toString()) {\r\n                    add = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (add) {\r\n                for (k = 0; k < weights.length; k++) {\r\n                    if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === [weights[k][0], weights[k][1]].toString()) {\r\n                        nextWaitingNodes.push([currentNodes[i][0], currentNodes[i][1], j, 0.2, weights[k][2]]);\r\n                        add = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!add) continue;\r\n            h = Math.abs(currentNodes[i][0] + directions[j][0] - targetNode[0]) + \r\n                            Math.abs(currentNodes[i][1] + directions[j][1] - targetNode[1]);\r\n            if (h <= bestDirection[0]) bestDirection = [h, j, 0];\r\n        }\r\n        if (bestDirection[2] === 0) {\r\n            nextNodes.push([currentNodes[i][0] + directions[bestDirection[1]][0], currentNodes[i][1] + directions[bestDirection[1]][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        } else if (bestDirection[2] === 1) {\r\n            nextNodes.push(bestFinishedWaiting);\r\n        } else {\r\n            var secondaryBestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1];\r\n            var nothingLeft: boolean = true;\r\n            var backtrackDirection: number[] = [];\r\n            for (j = graph.length - 1; j >= 0; j--) {\r\n                for (k = 0; k < directions.length; k++) {\r\n                    if ((alreadyDiscovered(discovered, [graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]])) ||\r\n                        ((graph[j][0][0] + directions[k][0] <= view[0] || graph[j][0][0] + directions[k][0] >= view[1]) || \r\n                        (graph[j][0][1] + directions[k][1] <= view[2] || graph[j][0][1] + directions[k][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                        continue;\r\n                    } else {\r\n                        add = true;\r\n                        var l: number;\r\n                        for (l = 0; l < walls.length; l++) {\r\n                            if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === walls[l].toString()) {\r\n                                add = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (add) {\r\n                            for (l = 0; l < weights.length; l++) {\r\n                                if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === [weights[l][0], weights[l][1]].toString()) {\r\n                                    nextWaitingNodes.push([graph[j][0][0], graph[j][0][1], k, 0.2, weights[l][2]]);\r\n                                    add = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!add) continue;\r\n                        h = Math.abs(graph[j][0][0] + directions[k][0] - targetNode[0]) + \r\n                                        Math.abs(graph[j][0][1] + directions[k][1] - targetNode[1]);\r\n                        if (h <= secondaryBestDirection[0]) {\r\n                            secondaryBestDirection = [h, k];\r\n                            backtrackDirection = [graph[j][0][0], graph[j][0][1]];\r\n                        }\r\n                        nothingLeft = false;\r\n                    }\r\n                }\r\n            }\r\n            if (nothingLeft) {\r\n                return graph;\r\n            } else {\r\n                nextNodes.push([backtrackDirection[0] + directions[secondaryBestDirection[1]][0], backtrackDirection[1] + directions[secondaryBestDirection[1]][1], backtrackDirection[0], backtrackDirection[1]]);\r\n            }\r\n        }\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return GBFS(graph, nextNodes, targetNode, nextWaitingNodes, discovered, found, walls, weights, view);\r\n}\r\n","import {alreadyDiscovered} from './helperfunctions';\r\n\r\nexport function AStar(graph: number[][][], currentNodes: number[][], targetNode: number[], waitingNodes: number[][],\r\n            discovered: number[][], found: boolean, walls: number[][], weights: number[][], view: number[]): number[][][] {\r\n    if (found) return graph;\r\n    const directions: number[][] = [[1,0],[0,1],[-1,0],[0,-1]];\r\n    var nextNodes: number[][] = [];\r\n    var nextWaitingNodes: number[][] = [];\r\n    var finishedWaiting: number[][] = [];\r\n    var i: number;\r\n    for (i = 0; i < waitingNodes.length; i++) {\r\n        if (waitingNodes[i][3] >= waitingNodes[i][4]) {\r\n            finishedWaiting.push([waitingNodes[i][0] + directions[waitingNodes[i][2]][0], waitingNodes[i][1] + directions[waitingNodes[i][2]][1], waitingNodes[i][0], waitingNodes[i][1], graph.length - 1]);\r\n        } else {\r\n            nextWaitingNodes.push([waitingNodes[i][0], waitingNodes[i][1], waitingNodes[i][2], Math.round((waitingNodes[i][3] + 0.2) * 10) / 10, waitingNodes[i][4]]);\r\n        }\r\n    }\r\n    graph.push([[]]);\r\n    var depth = graph.length - 1;\r\n    for (i = 0; i < currentNodes.length; i++) {\r\n        if (alreadyDiscovered(discovered, [currentNodes[i][0], currentNodes[i][1]])) continue;\r\n        if (i === 0) graph[depth][0] = currentNodes[i];\r\n        else graph[depth].push(currentNodes[i]);\r\n        discovered.push([currentNodes[i][0], currentNodes[i][1]]);\r\n        var bestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1, -1];\r\n        var bestFinishedWaiting: number[] = [];    \r\n        var j: number;\r\n        var k: number;\r\n        var g: number;\r\n        var h: number;\r\n        var f: number;\r\n        var add: boolean;\r\n        for (j = 0; j < finishedWaiting.length; j++) {\r\n            g = finishedWaiting[j][4];\r\n            h = Math.abs(finishedWaiting[j][0] - targetNode[0]) + \r\n                            Math.abs(finishedWaiting[j][1] - targetNode[1]);\r\n            f = g + h;\r\n            if (f <= bestDirection[0]) {\r\n                bestDirection = [f, j, 1];\r\n                bestFinishedWaiting = [finishedWaiting[j][0], finishedWaiting[j][1], finishedWaiting[j][2], finishedWaiting[j][3]];\r\n            };\r\n        }\r\n        for (j = 0; j < directions.length; j++) { // I could extend the \"directions\" with finishedwaiting, such saying for j in directions.length + 1 , and if we reach the last here, we do something only if finished waiting is a possibility\r\n            if ((alreadyDiscovered(discovered, [currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]])) ||\r\n                ((currentNodes[i][0] + directions[j][0] <= view[0] || currentNodes[i][0] + directions[j][0] >= view[1]) || \r\n                (currentNodes[i][1] + directions[j][1] <= view[2] || currentNodes[i][1] + directions[j][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                continue;\r\n            }\r\n            add = true;\r\n            for (k = 0; k < walls.length; k++) {\r\n                if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === walls[k].toString()) {\r\n                    add = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (add) {\r\n                for (k = 0; k < weights.length; k++) {\r\n                    if ([currentNodes[i][0] + directions[j][0], currentNodes[i][1] + directions[j][1]].toString() === [weights[k][0], weights[k][1]].toString()) {\r\n                        nextWaitingNodes.push([currentNodes[i][0], currentNodes[i][1], j, 0.2, weights[k][2]]);\r\n                        add = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!add) continue;\r\n            g = depth + 1;\r\n            h = Math.abs(currentNodes[i][0] + directions[j][0] - targetNode[0]) + \r\n                            Math.abs(currentNodes[i][1] + directions[j][1] - targetNode[1]);\r\n            f = g + h;\r\n            if (f <= bestDirection[0]) bestDirection = [f, j, 0];\r\n        }\r\n        if (bestDirection[2] === 0) {\r\n            nextNodes.push([currentNodes[i][0] + directions[bestDirection[1]][0], currentNodes[i][1] + directions[bestDirection[1]][1], currentNodes[i][0], currentNodes[i][1]]);\r\n        } else if (bestDirection[2] === 1) {\r\n            nextNodes.push(bestFinishedWaiting);\r\n        } else {\r\n            var secondaryBestDirection: number[] = [Number.MAX_SAFE_INTEGER, -1];\r\n            var nothingLeft: boolean = true;\r\n            var backtrackDirection: number[] = [];\r\n            for (j = graph.length - 1; j >= 0; j--) {\r\n                for (k = 0; k < directions.length; k++) {\r\n                    if ((alreadyDiscovered(discovered, [graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]])) ||\r\n                        ((graph[j][0][0] + directions[k][0] <= view[0] || graph[j][0][0] + directions[k][0] >= view[1]) || \r\n                        (graph[j][0][1] + directions[k][1] <= view[2] || graph[j][0][1] + directions[k][1] >= view[3]))) { // out of bounds, think of it as walls\r\n                        continue;\r\n                    } else {\r\n                        add = true;\r\n                        var l: number;\r\n                        for (l = 0; l < walls.length; l++) {\r\n                            if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === walls[l].toString()) {\r\n                                add = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (add) {\r\n                            for (l = 0; l < weights.length; l++) {\r\n                                if ([graph[j][0][0] + directions[k][0], graph[j][0][1] + directions[k][1]].toString() === [weights[l][0], weights[l][1]].toString()) {\r\n                                    nextWaitingNodes.push([graph[j][0][0], graph[j][0][1], k, 0.2, weights[l][2]]);\r\n                                    add = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        if (!add) continue;\r\n                        g = depth + 1;\r\n                        h = Math.abs(graph[j][0][0] + directions[k][0] - targetNode[0]) + \r\n                                        Math.abs(graph[j][0][1] + directions[k][1] - targetNode[1]);\r\n                        f = g + h;\r\n                        if (f <= secondaryBestDirection[0]) {\r\n                            secondaryBestDirection = [f, k];\r\n                            backtrackDirection = [graph[j][0][0], graph[j][0][1]];\r\n                        }\r\n                        nothingLeft = false;\r\n                    }\r\n                }\r\n            }\r\n            if (nothingLeft) {\r\n                return graph;\r\n            } else {\r\n                nextNodes.push([backtrackDirection[0] + directions[secondaryBestDirection[1]][0], backtrackDirection[1] + directions[secondaryBestDirection[1]][1], backtrackDirection[0], backtrackDirection[1]]);\r\n            }\r\n        }\r\n        if (!found && (currentNodes[i][0] === targetNode[0] && currentNodes[i][1] === targetNode[1])) found = true;\r\n    }\r\n    return AStar(graph, nextNodes, targetNode, nextWaitingNodes, discovered, found, walls, weights, view);\r\n}\r\n","\r\nexport function linearSearch(searchData: number[], target: number, iteration: number, searchDataBuilder: number[][]): number[][] {\r\n    var searchDataBuilderInstance: number[] = [];\r\n    for (var i = 0; i < iteration; i++) {\r\n        searchDataBuilderInstance.push(searchData[i]);\r\n        if (searchData[i] === target) {\r\n            return searchDataBuilder;\r\n        }\r\n    }\r\n    searchDataBuilder.push(searchDataBuilderInstance);\r\n    return linearSearch(searchData, target, iteration + 1, searchDataBuilder);\r\n}\r\n\r\n","\r\nexport function binarySearch(searchData: number[], target: number, from: number, to: number, searchDataBuilder: number[][]): number[][] {\r\n    var halfIndex: number = Math.floor((from + to) / 2);\r\n    if (searchData[halfIndex] === target) {\r\n        return searchDataBuilder;\r\n    }\r\n    if (target < searchData[halfIndex]) {\r\n        to = halfIndex;\r\n    } else {\r\n        from = halfIndex;\r\n    }\r\n    var searchDataBuilderTemp: number[] = [];\r\n    if (searchDataBuilder.length !== 0) {\r\n        for (var i = 0; i < searchDataBuilder[searchDataBuilder.length - 1].length; i++) {\r\n            searchDataBuilderTemp.push(searchDataBuilder[searchDataBuilder.length - 1][i]);\r\n        }\r\n    }\r\n    searchDataBuilderTemp.push(searchData[halfIndex]);\r\n    searchDataBuilder.push(searchDataBuilderTemp);\r\n    return binarySearch(searchData, target, from, to, searchDataBuilder);\r\n}\r\n\r\n","\r\nexport function jumpSearch(searchData: number[], target: number, iteration: number, jump: number, intervalFound: boolean, iterationAtInterval: number, iteration2: number, searchDataBuilder: number[][]): number[][] {\r\n    var searchDataBuilderInstance: number[] = [];\r\n    if (intervalFound) {\r\n        for (var i = 0; i < iterationAtInterval*jump; i+=jump) {\r\n            searchDataBuilderInstance.push(searchData[i]);\r\n        }\r\n        for (var j = iterationAtInterval*jump - jump + 1; j < (iterationAtInterval - 1)*jump + 1 + iteration2; j++) {\r\n            searchDataBuilderInstance.push(searchData[j]);\r\n            if (searchData[j] === target) {\r\n                return searchDataBuilder;\r\n            }\r\n        }\r\n        iteration2++;\r\n    } else {\r\n        for (var k = 0; k < iteration*jump; k+=jump) {\r\n            searchDataBuilderInstance.push(searchData[k]);\r\n            if (searchData[k] === target) {\r\n                return searchDataBuilder;\r\n            }\r\n        }\r\n    }\r\n    searchDataBuilder.push(searchDataBuilderInstance);\r\n    if (target < (iteration)*jump) {\r\n        intervalFound = true;\r\n        iterationAtInterval = iteration;\r\n    }\r\n    return jumpSearch(searchData, target, intervalFound ? iteration : iteration + 1, jump, intervalFound, iterationAtInterval, iteration2, searchDataBuilder);\r\n}\r\n\r\n","\r\nexport function mergeSort(sortData: number[][], sortDataBuilder: number[][]): number[][][] {\r\n    if (sortData.length === 1) {\r\n        var finalBuiltData: number[][][] = [];\r\n        for (var n = 0; n < sortDataBuilder.length; n++) {\r\n            var finalBuiltDataTemp: number[][] = [];\r\n            for (var p = 0; p < sortDataBuilder[n].length; p++) {\r\n                finalBuiltDataTemp.push([p, sortDataBuilder[n][p]]);\r\n            }\r\n            finalBuiltData.push(finalBuiltDataTemp);\r\n        }\r\n        return finalBuiltData;\r\n    }\r\n    var sortDataTemp: number[][] = [];\r\n    for (var i = 0; i < sortData.length; i+=2) {\r\n        if (i === sortData.length - 1) {\r\n            sortDataTemp.push(sortData[i]);\r\n        } else {\r\n            var j: number = 0;\r\n            var k: number = 0;\r\n            var intermediateSort: number[] = [];\r\n            while (j <= sortData[i].length && k <= sortData[i+1].length) {\r\n                if (j === sortData[i].length) {\r\n                    intermediateSort.push(sortData[i+1][k]);\r\n                    k++;\r\n                } else if (k === sortData[i+1].length) {\r\n                    intermediateSort.push(sortData[i][j]);\r\n                    j++;\r\n                } else if (sortData[i][j] > sortData[i+1][k]) {\r\n                    intermediateSort.push(sortData[i+1][k]);\r\n                    k++;\r\n                } else {\r\n                    intermediateSort.push(sortData[i][j]);\r\n                    j++;\r\n                }\r\n            }\r\n            intermediateSort.pop();\r\n            sortDataTemp.push(intermediateSort);\r\n        }\r\n    }\r\n    var sortDataBuilderTemp: number[][] = sortDataBuilder;\r\n    var toBuild: number[] = [];\r\n    for (var l = 0; l < sortDataTemp.length; l++) {\r\n        for (var m = 0; m < sortDataTemp[l].length; m++) {\r\n            toBuild.push(sortDataTemp[l][m]);\r\n        }\r\n    }\r\n    sortDataBuilderTemp.push(toBuild);\r\n    return mergeSort(sortDataTemp, sortDataBuilderTemp);\r\n}\r\n\r\n","\r\nfunction partition(array: number[], startIndex: number, endIndex: number) : [number, number[]] {\r\n    var pivot: number = array[endIndex];\r\n    for (var i = startIndex; i < endIndex; i++) {\r\n        if (array[i] <= pivot) {\r\n            var swapTemp = array[i];\r\n            array[i] = array[startIndex];\r\n            array[startIndex] = swapTemp;\r\n            startIndex++;\r\n        }\r\n    }\r\n    var swapTempLast = array[endIndex];\r\n    array[endIndex] = array[startIndex];\r\n    array[startIndex] = swapTempLast;\r\n    return [startIndex, array];\r\n}\r\n\r\nexport function quickSort(dataBuilder: number[][], array: number[], startIndex: number, endIndex: number) : number[][] {\r\n    if (startIndex >= endIndex) return dataBuilder;\r\n    dataBuilder.push(array.slice());\r\n    var pivotIndexAndArray: [number, number[]] = partition(array, startIndex, endIndex);\r\n    quickSort(dataBuilder, pivotIndexAndArray[1], startIndex, pivotIndexAndArray[0] - 1);\r\n    quickSort(dataBuilder, pivotIndexAndArray[1], pivotIndexAndArray[0] + 1, endIndex);\r\n    return dataBuilder;\r\n}\r\n","\r\nexport function bubbleSort(sortData: number[], sortDataBuilder: number[][], indexTo: number): number[][][] {\r\n    sortDataBuilder.push(sortData.slice());\r\n    if (indexTo === 0) {\r\n        var finalBuiltData: number[][][] = [];\r\n        for (var n = 0; n < sortDataBuilder.length; n++) {\r\n            var finalBuiltDataTemp: number[][] = [];\r\n            for (var p = 0; p < sortDataBuilder[n].length; p++) {\r\n                finalBuiltDataTemp.push([p, sortDataBuilder[n][p]]);\r\n            }\r\n            finalBuiltData.push(finalBuiltDataTemp);\r\n        }\r\n        return finalBuiltData;\r\n    }\r\n    for (var i = 0; i < indexTo; i++) {\r\n        if (sortData[i] > sortData[i+1]) {\r\n            var swap = sortData[i];\r\n            sortData[i] = sortData[i+1];\r\n            sortData[i+1] = swap;\r\n        }\r\n    }\r\n    return bubbleSort(sortData, sortDataBuilder, indexTo - 1);\r\n}\r\n\r\n","\r\nexport function legend(dropdownPickedSort: boolean, sortFinished: boolean, searchAlgoFound: boolean, isTarget: boolean, dropdownPickedSearch: boolean, searchTargetSelected: boolean, dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, colorOfRange: number, goalColor: number, algoSelectedOption: string, walls: number[][], weights: number[][]) {\r\n  return (\r\n    <div className=\"legend-container\">\r\n      <div className=\"legend-title\">\r\n        Legend\r\n      </div>\r\n      {dropdownPickedSort &&\r\n      <div className=\"legend-info\">\r\n        <div className={sortFinished ? \"legend-color2\" : \"legend-color1\"}><i className='fas fa-square'/></div>\r\n          &nbsp;{sortFinished ? \"Sorted entries\" : \"Shuffled entries\"}\r\n      </div>}\r\n      {dropdownPickedSearch &&\r\n      <div className=\"legend-info\">\r\n        <div className={isTarget ? \"legend-color2\" : \"legend-color1\"}><i className='fas fa-square'/></div>\r\n          &nbsp;{isTarget ? \"Target found\" : searchTargetSelected ? \"Target\" : \"Select target\"}\r\n      </div>}\r\n      {dropdownPickedSearch && searchAlgoFound &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color6\"><i className='fas fa-square'/></div>\r\n          &nbsp;Sought nodes\r\n      </div>}\r\n      {dropdownPicked && algoSelectedOption === \"Add walls\" &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-colorm1\"><i className='fas fa-square'/></div>\r\n          &nbsp;Add walls\r\n      </div>}\r\n      {walls.toString() !== [].toString() &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-colorm2\"><i className='fas fa-square'/></div>\r\n          &nbsp;Wall nodes\r\n      </div>}\r\n      {dropdownPicked && algoSelectedOption === \"Add weights\" &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color0\"><i className='fas fa-square'/></div>\r\n          &nbsp;Add weights\r\n      </div>}\r\n      {weights.toString() !== [].toString() && \r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-colorm3\"><i className='fas fa-square'/></div>\r\n          &nbsp;Weight nodes\r\n      </div>}\r\n      {dropdownPicked && algoSelectedOption === \"Select nodes\" && !startSelected &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n          &nbsp;Select start node\r\n      </div>}\r\n      {startSelected &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color1\"><i className='fas fa-square'/></div>\r\n          &nbsp;Start node\r\n      </div>}\r\n      {startSelected && algoSelectedOption === \"Select nodes\" && !goalSelected &&\r\n      (colorOfRange === 0 ?\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color2\"><i className='fas fa-square'/></div>\r\n          &nbsp;Select goal node (green light)\r\n      </div> \r\n      : (colorOfRange === 1 ? \r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color3\"><i className='fas fa-square'/></div>\r\n          &nbsp;Select goal node (computationally hard)\r\n      </div> \r\n      : \r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color4\"><i className='fas fa-square'/></div>\r\n          &nbsp;Select goal node (restricted)\r\n      </div>))}\r\n      {goalSelected &&\r\n      <div className=\"legend-info\">\r\n        <div className={goalColor === 0 ? \"legend-color2\" : (goalColor === 1 ? \"legend-color3\" : \"legend-color4\")}><i className='fas fa-square'/></div>\r\n          &nbsp;Goal node\r\n      </div>}\r\n      {goalSelected &&\r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color5\"><i className='fas fa-square'/></div>\r\n          &nbsp;Search\r\n      </div>}\r\n      {goalSelected && \r\n      <div className=\"legend-info\">\r\n        <div className=\"legend-color6\"><i className='fas fa-square'/></div>\r\n          &nbsp;Path found\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n","\r\nexport function footer(sortFound: boolean, searchAlgoFound: boolean, algoOrDataStruct: string, dropdownPickedSearch: boolean, dropdownPickedSort: boolean, dropdownPicked: boolean, startSelected: boolean, goalSelected: boolean, start: number[], goal: number[]) {\r\n  return (\r\n    <footer className=\"footer-container\">\r\n      {!dropdownPicked && !dropdownPickedSort && !dropdownPickedSearch &&\r\n      <div className=\"footer-info\">\r\n        Select an algorithm or datastructure\r\n      </div>}\r\n      {dropdownPickedSort && !sortFound &&\r\n      <div className=\"footer-in-small\">\r\n        Shuffle and choose the amount of entries with the slider\r\n      </div>}\r\n      {dropdownPickedSearch && algoOrDataStruct !== \"Jump search selected\" && !searchAlgoFound &&\r\n      <div className=\"footer-in-small\">\r\n        Shuffle and choose the amount of entries with the slider\r\n      </div>}\r\n      {dropdownPickedSearch && algoOrDataStruct === \"Jump search selected\" && !searchAlgoFound &&\r\n      <div className=\"footer-in-smaller\">\r\n        Shuffle and choose the amount of entries with the entries slider and choose your jump step count with the jump slider\r\n      </div>}\r\n      {searchAlgoFound &&\r\n      <div className=\"footer-inf-nowiggle\">\r\n        Enjoy the show!\r\n      </div>}\r\n      {sortFound &&\r\n      <div className=\"footer-inf-nowiggle\">\r\n        Enjoy the show!\r\n      </div>}\r\n      {!startSelected && dropdownPicked &&\r\n      <div className=\"footer-info\">\r\n        Select your start node\r\n      </div>}\r\n      {startSelected && !goalSelected &&\r\n      <div className=\"footer-info\">\r\n        Select your goal node\r\n      </div>}\r\n      {startSelected && goalSelected &&\r\n      <div className=\"footer-inf-nowiggle\">\r\n        Enjoy the show!\r\n      </div>}\r\n    </footer>\r\n  )\r\n}\r\n","\r\nexport function pickTargets(hoverBox: number[], startSelected: boolean, colorOfRange: number, algoSelectedOption: string) {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        height: \"15px\",\r\n        width: \"15px\",\r\n        marginTop: `${hoverBox[0]}px`,\r\n        marginLeft: `${hoverBox[1]}px`,\r\n        top: \"3px\",\r\n        left: \"3px\",\r\n        backgroundColor: algoSelectedOption === \"Select nodes\" ? (startSelected ? (colorOfRange === 0 ? \"rgb(49, 158, 63, 0.5)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63, 0.5)\" : \"rgb(221, 63, 63, 0.5)\" ) ) : \"rgb(65,126,238, 0.5)\") : (algoSelectedOption === \"Add walls\" ? \"rgb(146, 95, 0, 0.5)\" : \"rgb(68, 0, 179, 0.5)\"),\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        zIndex: -1,\r\n      }}\r\n    />\r\n  )\r\n}\r\n  \r\nexport function drawStartAndGoal(startOrGoal: number[], isGoal: boolean, colorOfRange: number) {\r\n  return (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: colorOfRange < 0 ? \"20px\" : \"15px\",\r\n          width: colorOfRange < 0 ? \"20px\" : \"15px\",\r\n          marginLeft: `${startOrGoal[0] * 20}px`,\r\n          marginTop: `${startOrGoal[1] * 20}px`,\r\n          top: colorOfRange < 0 ? \"0px\" : \"3px\",\r\n          left: colorOfRange < 0 ? \"0px\" : \"3px\",\r\n          backgroundColor: colorOfRange === -2 ? \"rgb(65,126,238,0.5)\" : colorOfRange === -1 ? \"rgb(49, 158, 63,0.5)\" : isGoal ? (colorOfRange === 0 ? \"rgb(49, 158, 63)\" : ( colorOfRange === 1 ? \"rgb(211, 221, 63)\" : \"rgb(221, 63, 63)\" ) ) : \"rgb(65,126,238)\",\r\n          borderRadius: colorOfRange < 0 ? \"0%\" : \"35%\",\r\n          display: \"inline-block\",\r\n          animation: \"fadeMe .2s\",\r\n          zIndex: -0.9,\r\n        }}/>\r\n  );\r\n}\r\n  \r\nexport function drawSearch(positions: number[][][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      entry.map(elem => (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: \"15px\",\r\n          width: \"15px\",\r\n          marginLeft: `${elem[0] * 20}px`,\r\n          marginTop: `${elem[1] * 20}px`,\r\n          top: \"3px\",\r\n          left: \"3px\",\r\n          backgroundColor: \"rgb(90, 90, 90)\",\r\n          borderRadius: \"35%\",\r\n          display: \"inline-block\",\r\n          animation: isFade ? \"fadeMe .2s\" : \"\",\r\n          zIndex: -1,\r\n        }}/>\r\n      ))\r\n    ))\r\n  );\r\n}\r\n  \r\nexport function drawPath(positions: number[][], isFade: boolean) {\r\n  return (\r\n    positions.map(entry => (\r\n      <div style={{\r\n        position: \"absolute\",\r\n        height: \"7.5px\",\r\n        width: \"7.5px\",\r\n        marginLeft: `${entry[0] * 20}px`,\r\n        marginTop: `${entry[1] * 20}px`,\r\n        top: \"6.85px\",\r\n        left: \"6.85px\",\r\n        backgroundColor: \"rgb(240,149,55)\",\r\n        borderRadius: \"35%\",\r\n        display: \"inline-block\",\r\n        animation: isFade ? \"fadeMe .2s\" : \"\",\r\n        zIndex: -0.8,\r\n      }}/>\r\n    ))\r\n  );\r\n}\r\n  \r\nexport function drawWalls(walls: number[][], isFade: boolean) {\r\n  return (\r\n    walls.map(entry => (\r\n      <div style={{\r\n        position: \"absolute\",\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        marginLeft: `${entry[0] * 20}px`,\r\n        marginTop: `${entry[1] * 20}px`,\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        backgroundColor: \"rgb(146, 95, 0)\",\r\n        display: \"inline-block\",\r\n        animation: isFade ? \"fadeMe 1s\" : \"\",\r\n        zIndex: -0.8,\r\n      }}/>\r\n    ))\r\n  );\r\n}\r\n\r\nexport function drawWeights(weights: number[][], isFade: boolean) {\r\n  return (\r\n    weights.map(entry => (\r\n      <div style={{\r\n        position: \"absolute\",\r\n        height: \"20px\",\r\n        width: \"20px\",\r\n        marginLeft: `${entry[0] * 20}px`,\r\n        marginTop: `${entry[1] * 20}px`,\r\n        top: \"0px\",\r\n        left: \"0px\",\r\n        backgroundColor: `rgb(68, 0, 179, ${entry[2]})`,\r\n        display: \"inline-block\",\r\n        animation: isFade ? \"fadeMe 1s\" : \"\",\r\n        zIndex: -0.8,\r\n      }}/>\r\n    ))\r\n  );\r\n}\r\n\r\n","\r\n\r\n\r\nexport function drawSortData(data: number[][], sortFinished: boolean) {\r\n    return (\r\n      data.map(entry => (\r\n        <div style={{\r\n          position: \"absolute\",\r\n          height: `${entry[1] * 20}px`,\r\n          width: \"15px\",\r\n          marginLeft: `${entry[0] * 20 + 2.5}px`,\r\n          bottom: \"0px\",\r\n          left: \"0px\",\r\n          borderRadius: \"5px\",\r\n          backgroundColor: sortFinished ? \"rgb(125,194,175,0.7)\" : \"rgb(65,126,238,0.7)\",\r\n          display: \"inline-block\",\r\n          zIndex: -2,\r\n        }}/>\r\n      ))\r\n    );\r\n}","\r\nexport function drawAlgoSearchNumbers(numbers: number[], screenWidth: number) {\r\n    return (\r\n        numbers.map(entry => (\r\n            <div style={{\r\n                position: \"absolute\",\r\n                height: \"15px\",\r\n                width: \"15px\",\r\n                fontSize: entry >= 1000 ? \"8px\" : entry >= 100 ? \"10px\" : \"12px\",\r\n                marginLeft: `${(entry % screenWidth) * 20 - (entry >= 100 ? 1 : entry >= 100 ? 1 : entry >= 10 ? 0 : -4)}px`,\r\n                marginTop: `${(Math.floor(entry / screenWidth) * 20) + (4 * 20) - (entry >= 1000 ? -2 : entry >= 100 ? -1 : 0)}px`,\r\n                top: \"3px\",\r\n                left: \"3px\",\r\n                borderRadius: \"35%\",\r\n                display: \"inline-block\",\r\n                animation: true ? \"fadeMe .2s\" : \"\",\r\n                zIndex: -1,\r\n            }}>\r\n                {entry}\r\n            </div>\r\n        ))\r\n    );\r\n}\r\n\r\nexport function drawAlgoSearch(numbers: number[], screenWidth: number) {\r\n    return (\r\n        numbers.map(entry => (\r\n            <div style={{\r\n                position: \"absolute\",\r\n                height: \"20px\",\r\n                width: \"20px\",\r\n                marginLeft: `${(entry % screenWidth) * 20}px`,\r\n                marginTop: `${(Math.floor(entry / screenWidth) * 20)}px`,\r\n                backgroundColor: \"rgb(30,30,30,0.8)\",\r\n                display: \"inline-block\",\r\n                animation: true ? \"fadeMe .2s\" : \"\",\r\n                zIndex: -1,\r\n            }}/>\r\n        ))\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport styled from 'styled-components';\r\n\r\nimport {BFS} from './SearchAlgorithms/BFS';\r\nimport {DFS} from './SearchAlgorithms/DFS';\r\nimport {GBFS} from './SearchAlgorithms/GBFS';\r\nimport {AStar} from './SearchAlgorithms/AStar';\r\nimport {linearSearch} from './AlgoSearchAlgorithms/linearsearch';\r\nimport {binarySearch} from './AlgoSearchAlgorithms/binarysearch';\r\nimport {jumpSearch} from './AlgoSearchAlgorithms/jumpsearch';\r\nimport {mergeSort} from './SortAlgorithms/mergesort';\r\nimport {quickSort} from './SortAlgorithms/quicksort';\r\nimport {bubbleSort} from './SortAlgorithms/bubblesort';\r\nimport {getFullDataSearch} from './SearchAlgorithms/helperfunctions';\r\nimport {legend} from './components/legend';\r\nimport {footer} from './components/footer';\r\nimport {pickTargets, drawStartAndGoal, drawSearch, drawPath, drawWalls, drawWeights} from './components/drawsearches';\r\nimport {drawSortData} from './components/drawsorts';\r\nimport {drawAlgoSearchNumbers, drawAlgoSearch} from './components/drawalgosearches';\r\n\r\ninterface props {\r\n  opacity: number;\r\n  color: string;\r\n  jump: boolean;\r\n}\r\n\r\nconst Styles = styled.div<props>`\r\n  display: flex;\r\n  position: fixed;\r\n  align-items: center;\r\n  color: rgb(125,194,175);\r\n  margin-top: ${(props) => props.jump ? \"100px\" : \"50px\"};\r\n  right: 30px;\r\n\r\n  .value {\r\n    flex: 1;\r\n    margin-right: 15px;\r\n    font-size: 30px;\r\n  }\r\n  \r\n  .slider {\r\n    flex: 100;\r\n    -webkit-appearance: none;\r\n    height: 10px;\r\n    width: 300px;\r\n    border-radius: 5px;\r\n    background: rgb(226,125,95,0.8);\r\n    outline: none;\r\n\r\n    &::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      appearance: none;\r\n      width: 20px;\r\n      height: 20px;\r\n      border-radius: 5px;\r\n      background: ${(props) => props.color};\r\n      opacity: ${(props) => props.opacity};\r\n      cursor: pointer;\r\n      outline: 3px solid rgb(65,126,238);\r\n    }\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [dropdownPicked, setDropdownPicked] = useState(false);\r\n  const [dropdownPickedSearch, setDropdownPickedSearch] = useState(false);\r\n  const [dropdownPickedSort, setDropdownPickedSort] = useState(false);\r\n  const [dropdownPickedDatastructures, setDropdownPickedDatastructures] = useState(false);\r\n  const [startSelected, setStartSelected] = useState(false);\r\n  const [goalSelected, setGoalSelected] = useState(false);\r\n  const [hoverBox, setHoverBox] = useState<number[]>([]);\r\n  const [start, setStart] = useState<number []>([]);\r\n  const [goal, setGoal] = useState<number []>([]);\r\n  const [fullSearchData, setFullSearchData] = useState<number[][][]>([]);\r\n  const [fullSortData, setFullSortData] = useState<number[][][]>([]);\r\n  const [positions, setPositions] = useState<number[][][]>([]);\r\n  const [positionsPath, setPositionsPath] = useState<number[][]>([]);\r\n  const [alreadyDrawn, setAlreadyDrawn] = useState<number[][][]>([]);\r\n  const [alreadyDrawnPath, setAlreadyDrawnPath] = useState<number[][]>([]);\r\n  const [path, setPath] = useState<number[][]>([]);\r\n  const [pathFound, setPathFound] = useState(false);\r\n  const [sortFound, setSortFound] = useState(false);\r\n  const [colorOfRange, setColorOfRange] = useState(0);\r\n  const [goalColor, setGoalColor] = useState(0);\r\n  const [drawingDone, setDrawingDone] = useState(true);\r\n  const [walls, setWalls] = useState<number[][]>([]);\r\n  const [weights, setWeights] = useState<number[][]>([]);\r\n  const [algoSelectedOption, setAlgoSelectedOption] = useState(\"Select nodes\");\r\n  const [click, setClick] = useState(false);\r\n  const [dropdownAlgorithms, setDropdownAlgorithms] = useState(false);\r\n  const [dropdownDatastructures, setDropdownDatastructures] = useState(false);\r\n  const [dropdownSearchAlgorithms, setDropdownSearchAlgorithms] = useState(false);\r\n  const [algoOrDatastruct, setAlgoOrDatastruct] = useState<string>(\"Nothing selected\");\r\n  const [sliderValue, setSliderValue] = useState<number>(50);\r\n  const [jumpValue, setJumpValue] = useState<string>(\"5\");\r\n  const [sortData, setSortData] = useState<number[][]>([]);\r\n  const [runSort, setRunSort] = useState(\"\");\r\n  const [sortFinished, setSortFinished] = useState(false);\r\n  const [searchNumbers, setSearchNumbers] = useState<number[]>([]);\r\n  const [screenWidthHeight, setScreenWidthHeight] = useState<number[]>([0, 0]);\r\n  const [searchTarget, setSearchTarget] = useState<number[]>([]);\r\n  const [searchTargetSelected, setSearchTargetSelected] = useState(false);\r\n  const [searchAlgoFound, setSearchAlgoFound] = useState(false);\r\n  const [fullAlgoSearchData, setFullAlgoSearchData] = useState<number[][]>([]);\r\n  const [algoSearchData, setAlgoSearchData] = useState<number[]>([]);\r\n  const [algoSearchTarget, setAlgoSearchTarget] = useState<number>(0);\r\n  const [isTarget, setIsTarget] = useState(false);\r\n\r\n  const onMouseEnterDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownAlgorithms = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownAlgorithms(false);\r\n      } else {\r\n          setDropdownAlgorithms(false);\r\n      }\r\n  };\r\n  const onMouseEnterDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(true);\r\n      }\r\n  };\r\n  const onMouseLeaveDropdownDatastructures = () => {\r\n      if (window.innerWidth < 960) {\r\n          setDropdownDatastructures(false);\r\n      } else {\r\n          setDropdownDatastructures(false);\r\n      }\r\n  };\r\n  const onMouseEnterDropdownSearchAlgorithms = () => {\r\n    if (window.innerWidth < 960) {\r\n        setDropdownSearchAlgorithms(false);\r\n    } else {\r\n        setDropdownSearchAlgorithms(true);\r\n    }\r\n  };\r\n  const onMouseLeaveDropdownSearchAlgorithms = () => {\r\n    if (window.innerWidth < 960) {\r\n        setDropdownSearchAlgorithms(false);\r\n    } else {\r\n        setDropdownSearchAlgorithms(false);\r\n    }\r\n  };\r\n\r\n  function resetMouseListeners() {\r\n    onmousedown = function() {return;}\r\n    onmouseup = function() {return;}\r\n    onmousemove = function() {return;}\r\n  }\r\n\r\n  if (dropdownPickedSearch && runSort.includes(\"search\") && !searchTargetSelected) {\r\n    onmousedown = function() {return;}\r\n    onmouseup = function() {return;}\r\n    onmousemove = function() {return;}\r\n    onmousemove = function(e) {\r\n      if ((e.clientY >= 80 && e.clientY <= 60 + (sliderValue / Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)) / 20)) * 20)\r\n      || (e.clientY <= 80 + (sliderValue / Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)) / 20)) * 20\r\n        && e.clientX <= (sliderValue % Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)) / 20)) * 20)) {\r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20]);\r\n        onmousedown = function(e2) {\r\n          if (e2.clientY >= 80) {\r\n            setSearchTarget([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)]);\r\n            setAlgoSearchTarget(Math.floor(e.clientX / 20) + ((Math.floor(e.clientY / 20) - 4) * Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)) / 20)));\r\n            setSearchTargetSelected(true);\r\n            resetMouseListeners();\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        onmousedown = function() {return;}\r\n      }\r\n    }\r\n  }\r\n\r\n  if (algoSelectedOption === \"Add walls\") {\r\n    onmousedown = function() {return;}\r\n    onmouseup = function() {return;}\r\n    onmousemove = function() {return;}\r\n    onmousemove = function(e) {\r\n      if (e.clientY >= 80) {\r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20]);\r\n        onmousedown = function(e2) {\r\n          if (e2.clientY >= 80) {\r\n            var add: boolean = true;\r\n            var remove: boolean = false;\r\n            var walls_temp: number[][] = [];\r\n            var i: number;\r\n            for (i = 0; i < walls.length; i++) {\r\n              if (walls[i].toString() === [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                add = false;\r\n                remove = true;\r\n                continue;\r\n              }\r\n              walls_temp.push(walls[i]);\r\n            }\r\n            if (add) {\r\n              var weights_temp: number[][] = [];\r\n              for (i = 0; i < weights.length; i++) {\r\n                if ([weights[i][0], weights[i][1]].toString() !== [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                  weights_temp.push(weights[i]);\r\n                }\r\n              }\r\n              setWeights(weights_temp);\r\n            }\r\n            if (add) {\r\n              walls_temp.push([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)]);\r\n              setWalls(walls_temp);\r\n            }\r\n            if (remove) {\r\n              setWalls(walls_temp);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  if (algoSelectedOption === \"Add weights\") {\r\n    onmousedown = function() {return;}\r\n    onmouseup = function() {return;}\r\n    onmousemove = function() {return;}\r\n    onmousemove = function(e) {\r\n      if (e.clientY >= 80) {\r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20])\r\n        onmousedown = function(e2) {\r\n          if (e2.clientY >= 80) {\r\n            var add: boolean = true;\r\n            var weights_temp = weights;\r\n            var i: number;\r\n            for (i = 0; i < weights_temp.length; i++) {\r\n              if ([weights[i][0], weights[i][1]].toString() === [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                add = false;\r\n                weights_temp[i][2] = weights_temp[i][2] === 1 ? 0.2 : Math.round((weights_temp[i][2] + 0.2) * 10) / 10;\r\n                break;\r\n              }\r\n            }\r\n            if (add) {\r\n              for (i = 0; i < walls.length; i++) {\r\n                if (walls[i].toString() === [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                  add = false;\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n            if (add) {\r\n              weights_temp.push([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20), 0.2]);\r\n              setWeights(weights_temp);\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  if (dropdownPicked && algoSelectedOption === \"Select nodes\") {\r\n    if (!startSelected || !goalSelected) {\r\n      onmousedown = function() {return;}\r\n      onmouseup = function() {return;}\r\n      onmousemove = function() {return;}\r\n      onmouseup = function(e) {\r\n        if (algoSelectedOption !== \"Select nodes\") return;\r\n        var add: boolean = true;\r\n        var i: number;\r\n        if (!startSelected && start.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            for (i = 0; i < walls.length; i++) {\r\n              if (walls[i].toString() === [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                add = false;\r\n                break;\r\n              }\r\n            }\r\n            if (add) {\r\n              setStart([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n              setStartSelected(true);\r\n            }\r\n          }\r\n        }\r\n        else if (!goalSelected && goal.length === 0) {\r\n          if (e.clientY >= 80) {\r\n            for (i = 0; i < walls.length; i++) {\r\n              if (walls[i].toString() === [Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)].toString()) {\r\n                add = false;\r\n                break;\r\n              }\r\n            }\r\n            if (add) {\r\n              if (colorOfRange !== 2) {\r\n                var goalColorTemp = colorOfRange;\r\n                setGoalColor(goalColorTemp);\r\n                setGoal([Math.floor(e.clientX / 20), Math.floor(e.clientY / 20)])\r\n                setGoalSelected(true);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!goalSelected && dropdownPicked && algoSelectedOption === \"Select nodes\") {\r\n    onmousemove = function(e) {\r\n      var range: number = Math.abs(Math.floor(e.clientX / 20) - start[0]) + \r\n                          Math.abs(Math.floor(e.clientY / 20) - start[1]);\r\n      if (e.clientY >= 80) {\r\n        if (algoOrDatastruct === \"BFS algorithm selected\") {\r\n          if (range < 20) setColorOfRange(0);\r\n          if (range >= 20 && range < 40) setColorOfRange(1);\r\n          if (range >= 40) setColorOfRange(2);\r\n        } else if (algoOrDatastruct === \"DFS algorithm selected\") {\r\n          setColorOfRange(0);\r\n        } else if (algoOrDatastruct === \"GBFS algorithm selected\") {\r\n          setColorOfRange(0);\r\n        } else if (algoOrDatastruct === \"A* algorithm selected\") {\r\n          setColorOfRange(0);\r\n        }\r\n        setHoverBox([Math.floor(e.clientY / 20) * 20, Math.floor(e.clientX / 20) * 20]);\r\n      };\r\n    }\r\n  }\r\n  \r\n  if (goalSelected && !pathFound) {\r\n    onmousedown = function(e) {return;}\r\n    onmouseup = function(e) {return;}\r\n    onmousemove = function(e) {return;}\r\n    if (fullSearchData.length === 0 || path.length === 0) {\r\n      const minWidth: number = -1;\r\n      const maxWidth: number = Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) - 19.99) / 20) + 1;\r\n      const minHeight: number = Math.floor(80 / 20) - 1;\r\n      const maxHeight: number = Math.floor((Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0) - 19.99) / 20) + 1;\r\n      var fullDataSearchTemp: number[][][];\r\n      var pathTemp: number[][];\r\n      if (algoOrDatastruct === \"BFS algorithm selected\") {\r\n        fullDataSearchTemp = BFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], [], false, walls, weights, [minWidth, maxWidth, minHeight, maxHeight]);\r\n        setFullSearchData(fullDataSearchTemp);\r\n        pathTemp = getFullDataSearch(fullDataSearchTemp, goal);\r\n        pathTemp = pathTemp.reverse();\r\n        setPath(pathTemp);\r\n        setPathFound(true);\r\n      } else if (algoOrDatastruct === \"DFS algorithm selected\") {\r\n        fullDataSearchTemp = DFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], [], false, walls, weights, [minWidth, maxWidth, minHeight, maxHeight], []);\r\n        setFullSearchData(fullDataSearchTemp);\r\n        pathTemp = getFullDataSearch(fullDataSearchTemp, goal);\r\n        pathTemp = pathTemp.reverse();\r\n        setPath(pathTemp);\r\n        setPathFound(true);\r\n      } else if (algoOrDatastruct === \"GBFS algorithm selected\") {\r\n        fullDataSearchTemp = GBFS([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], [], false, walls, weights, [minWidth, maxWidth, minHeight, maxHeight]);\r\n        setFullSearchData(fullDataSearchTemp);\r\n        pathTemp = getFullDataSearch(fullDataSearchTemp, goal);\r\n        pathTemp = pathTemp.reverse();\r\n        setPath(pathTemp);\r\n        setPathFound(true);\r\n      } else if (algoOrDatastruct === \"A* algorithm selected\") {\r\n        fullDataSearchTemp = AStar([], [[start[0], start[1], Number.MIN_SAFE_INTEGER, Number.MIN_SAFE_INTEGER]], goal, [], [], false, walls, weights, [minWidth, maxWidth, minHeight, maxHeight]);\r\n        setFullSearchData(fullDataSearchTemp);\r\n        pathTemp = getFullDataSearch(fullDataSearchTemp, goal);\r\n        pathTemp = pathTemp.reverse();\r\n        setPath(pathTemp);\r\n        setPathFound(true);\r\n      }\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    var i = 0;\r\n    var k = 0;\r\n    if (pathFound) {\r\n      setDrawingDone(false);\r\n      const interval = setInterval(() => {\r\n        if (i === fullSearchData.length) {\r\n          if (k === path.length) {\r\n            setDrawingDone(true);\r\n            clearInterval(interval);\r\n            return;\r\n          } else {\r\n            if (k > 0) {\r\n              var alreadyDrawnTempPath: number[][] = [];\r\n              for (var l = 0; l < k; l++) {\r\n                alreadyDrawnTempPath[l] = path[l]\r\n              }\r\n              setAlreadyDrawnPath(alreadyDrawnTempPath);\r\n            }\r\n            var posPath: number[][] = [];\r\n            posPath[k] = path[k];\r\n            setPositionsPath(posPath);\r\n            k++;\r\n          }\r\n        } else {\r\n          if (i > 0) {\r\n            var alreadyDrawnTemp: number[][][] = [];\r\n            for (var j = 0; j < i; j++) {\r\n              alreadyDrawnTemp[j] = fullSearchData[j]\r\n            }\r\n            setAlreadyDrawn(alreadyDrawnTemp);\r\n          }\r\n          var pos: number[][][] = [];\r\n          pos[i] = fullSearchData[i];\r\n          setPositions(pos);\r\n          i++;\r\n        }\r\n      }, 2000 / fullSearchData.length);\r\n    }\r\n  }, [pathFound, fullSearchData, path]);\r\n\r\n  function sortComponents(dropdownPickedSort: boolean) {\r\n    var w: number = Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)) / 20);\r\n    var h: number = Math.floor((Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)) / 20) - 4;\r\n    if (screenWidthHeight[0] !== w && screenWidthHeight[1] !== h) {\r\n      setScreenWidthHeight([w,h]);\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"slider-text\" style={{zIndex: -1}}>Amount of entries</div>\r\n        <Styles jump={false} opacity={0.8} color={`rgb(${sliderValue*1.5},${201-sliderValue*1.5},0)`}>\r\n          <div className=\"value\" style={{zIndex: -1}}>{sliderValue}</div>\r\n          <input type=\"range\" min={2} max={dropdownPickedSort ? (Math.floor((Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) - 19.99) / 20) + 1) * 1 * 10 / 10 : w*h} value={sliderValue} className=\"slider\" onChange={(e: any) => setSliderValue(e.target.value)} onInput={() => dropdownPickedSort ? partialSortReset() : partialSearchReset()} />\r\n        </Styles>\r\n        {algoOrDatastruct === \"Jump search selected\" &&\r\n        <div>\r\n          <div className=\"slider-text-jump\" style={{zIndex: -1}}>Jump step-count</div>\r\n          <Styles jump={true} opacity={0.8} color={`rgb(${parseInt(jumpValue)*1.5},${201-parseInt(jumpValue)*1.5},0)`}>\r\n            <div className=\"value\" style={{zIndex: -1}}>{jumpValue}</div>\r\n            <input type=\"range\" min={1} max={sliderValue} value={jumpValue} className=\"slider\" onChange={(e: any) => setJumpValue(e.target.value)} />\r\n          </Styles>\r\n        </div>}\r\n        <button className={algoOrDatastruct === \"Jump search selected\" ? 'btn-jump' : 'btn-sort'} onClick={() => setRunSort(algoOrDatastruct)}>\r\n          {dropdownPickedSort ? \"Run sort\" : \"Pick target\"}\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sortFound) {\r\n      var i: number = 0;\r\n      const interval = setInterval(() => {\r\n        if (i >= fullSortData.length) {\r\n          setSortFinished(true);\r\n          clearInterval(interval);\r\n          return;\r\n        }\r\n        setSortData(fullSortData[i]);\r\n        i++;\r\n      }, 5000 / fullSortData.length);\r\n    }\r\n  }, [sortFound, fullSortData]);\r\n\r\n  useEffect(() => {\r\n    if (searchTargetSelected) {\r\n      var fullAlgoSearchData: number[][] = [];\r\n      if (runSort === \"Linear search selected\") {\r\n        fullAlgoSearchData = linearSearch(searchNumbers, algoSearchTarget, 1, []);\r\n        setFullAlgoSearchData(fullAlgoSearchData);\r\n        setSearchAlgoFound(true);\r\n      }\r\n      if (runSort === \"Binary search selected\") {\r\n        fullAlgoSearchData = binarySearch(searchNumbers, algoSearchTarget, 0, searchNumbers.length - 1, []);\r\n        setFullAlgoSearchData(fullAlgoSearchData);\r\n        setSearchAlgoFound(true);\r\n      }\r\n      if (runSort === \"Jump search selected\") {\r\n        fullAlgoSearchData = jumpSearch(searchNumbers, algoSearchTarget, 1, parseInt(jumpValue), false, -1, 1, []);\r\n        setFullAlgoSearchData(fullAlgoSearchData);\r\n        setSearchAlgoFound(true);\r\n      }\r\n    }\r\n  }, [searchTargetSelected, algoSearchTarget, runSort, searchNumbers, jumpValue]);\r\n\r\n  useEffect(() => {\r\n    if (searchAlgoFound) {\r\n      var i: number = 0;\r\n      const interval = setInterval(() => {\r\n        if (i >= fullAlgoSearchData.length) {\r\n          setIsTarget(true);\r\n          clearInterval(interval);\r\n          return;\r\n        }\r\n        setAlgoSearchData(fullAlgoSearchData[i]);\r\n        i++;\r\n      }, 2000 / fullAlgoSearchData.length);\r\n    }\r\n  }, [searchAlgoFound, fullAlgoSearchData]);\r\n\r\n  useEffect(() => {\r\n    if (algoOrDatastruct.includes(\"sort\")) {\r\n      var h: number = Math.floor((Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0) - 19.99) / 20) - 3;\r\n      var builtSortData: number[][] = [];\r\n      for (var x = 0; x < sliderValue; x++) {\r\n        var y: number = Math.floor(Math.random() * (h - 1 + 1) + 1);\r\n        builtSortData.push([x, y]);\r\n      }\r\n      setSortData(builtSortData);\r\n    }\r\n    if (algoOrDatastruct.includes(\"search\")) {\r\n      var searchNumbersTemp: number[] = [];\r\n      for (var i = 0; i < sliderValue; i++) {\r\n        searchNumbersTemp.push(i);\r\n      }\r\n      setSearchNumbers(searchNumbersTemp);\r\n    }\r\n  }, [sliderValue, algoOrDatastruct]);\r\n\r\n  // Sort algorithm also happens here\r\n  useEffect(() => {\r\n    var sortDataWithoutIndex: number[] = [];\r\n    var i: number;\r\n    if (runSort === \"Quick sort selected\") {\r\n      for (i = 0; i < sortData.length; i++) {\r\n        sortDataWithoutIndex.push(sortData[i][1]);\r\n      }\r\n      var fullSortDataTemp: number[][] = quickSort([], sortDataWithoutIndex, 0, sortDataWithoutIndex.length - 1);\r\n      var fullSortDataTempWithIndex: number[][][] = [];\r\n      for (var n = 0; n < fullSortDataTemp.length; n++) {\r\n          var finalBuiltDataTemp: number[][] = [];\r\n          for (var p = 0; p < fullSortDataTemp[n].length; p++) {\r\n              finalBuiltDataTemp.push([p, fullSortDataTemp[n][p]]);\r\n          }\r\n          fullSortDataTempWithIndex.push(finalBuiltDataTemp);\r\n      }\r\n      setFullSortData(fullSortDataTempWithIndex);\r\n      setSortFound(true);\r\n    }\r\n\r\n    var sortDataWithoutIndex2: number[][] = [];\r\n\r\n    if (runSort === \"Merge sort selected\") {\r\n      for (i = 0; i < sortData.length; i++) {\r\n        sortDataWithoutIndex2.push([sortData[i][1]]);\r\n      }\r\n      var fullSortDataTemp2: number[][][] = mergeSort(sortDataWithoutIndex2, []);\r\n      setFullSortData(fullSortDataTemp2);\r\n      setSortFound(true);\r\n    }\r\n\r\n    if (runSort === \"Bubble sort selected\") {\r\n      for (i = 0; i < sortData.length; i++) {\r\n        sortDataWithoutIndex.push(sortData[i][1]);\r\n      }\r\n      var fullSortDataTemp3: number[][][] = bubbleSort(sortDataWithoutIndex, [], sortDataWithoutIndex.length - 1);\r\n      setFullSortData(fullSortDataTemp3);\r\n      setSortFound(true);\r\n    }\r\n  }, [runSort]);\r\n\r\n  function defineSearchNumbers() {\r\n    for (var i = 0; i < sliderValue; i++) {\r\n      searchNumbers.push(i);\r\n    }\r\n    setSearchNumbers(searchNumbers);\r\n  }\r\n\r\n\r\n\r\n  function reset() {\r\n    setDropdownPicked(false);\r\n    setDropdownPickedSort(false);\r\n    setDropdownPickedSearch(false);\r\n    setAlgoOrDatastruct(\"Nothing selected\");\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setColorOfRange(0);\r\n    setAlgoSelectedOption(\"Select nodes\");\r\n    setWalls([]);\r\n    setWeights([]);\r\n\r\n    partialSearchReset();\r\n    partialReset();\r\n    partialSortReset();\r\n    resetMouseListeners();\r\n  }\r\n\r\n  function partialReset() {\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setColorOfRange(0);\r\n    resetMouseListeners();\r\n\r\n    setSearchNumbers([]);\r\n    setScreenWidthHeight([0, 0]);\r\n    setSearchTarget([]);\r\n    setSearchTargetSelected(false);\r\n    setSearchAlgoFound(false);\r\n    setFullAlgoSearchData([]);\r\n    setAlgoSearchData([]);\r\n    setAlgoSearchTarget(0);\r\n    setIsTarget(false);\r\n    setRunSort(\"\");\r\n    setHoverBox([]);\r\n    setJumpValue(\"5\");\r\n    setSliderValue(50);\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n\r\n    setSortFound(false);\r\n    setFullSortData([]);\r\n    setSortFinished(false);\r\n    setRunSort(\"\");\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n  }\r\n\r\n  function partialSearchReset() {\r\n    setSearchNumbers([]);\r\n    setScreenWidthHeight([0, 0]);\r\n    setSearchTarget([]);\r\n    setSearchTargetSelected(false);\r\n    setSearchAlgoFound(false);\r\n    setFullAlgoSearchData([]);\r\n    setAlgoSearchData([]);\r\n    setAlgoSearchTarget(0);\r\n    setIsTarget(false);\r\n    setRunSort(\"\");\r\n    setHoverBox([]);\r\n    setJumpValue(\"5\");\r\n    setSliderValue(50);\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setColorOfRange(0);\r\n    resetMouseListeners();\r\n\r\n    setSortFound(false);\r\n    setFullSortData([]);\r\n    setSortFinished(false);\r\n    setRunSort(\"\");\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n  }\r\n\r\n  function partialSortReset() {\r\n    setSortFound(false);\r\n    setFullSortData([]);\r\n    setSortFinished(false);\r\n    setRunSort(\"\");\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n    setStart([]);\r\n    setGoal([]);\r\n    setFullSearchData([]);\r\n    setPositions([]);\r\n    setPositionsPath([]);\r\n    setAlreadyDrawn([]);\r\n    setAlreadyDrawnPath([]);\r\n    setPath([]);\r\n    setPathFound(false);\r\n    setColorOfRange(0);\r\n    resetMouseListeners();\r\n\r\n    setSearchNumbers([]);\r\n    setScreenWidthHeight([0, 0]);\r\n    setSearchTarget([]);\r\n    setSearchTargetSelected(false);\r\n    setSearchAlgoFound(false);\r\n    setFullAlgoSearchData([]);\r\n    setAlgoSearchData([]);\r\n    setAlgoSearchTarget(0);\r\n    setIsTarget(false);\r\n    setRunSort(\"\");\r\n    setHoverBox([]);\r\n    setJumpValue(\"5\");\r\n    setSliderValue(50);\r\n    resetMouseListeners();\r\n    setGoal([]);\r\n    setStart([]);\r\n    setWalls([]);\r\n    setWeights([]);\r\n    setStartSelected(false);\r\n    setGoalSelected(false);\r\n  }\r\n\r\n  \r\n\r\n  // Refactoring navbar into a separate component is more difficult, as it has a bunch of setstates\r\n  return (\r\n    <div className=\"body\">\r\n      <nav className=\"navbar\">\r\n          <div className='navbar-logo'>\r\n              DSA visuals <i className='fas fa-project-diagram'/>\r\n          </div>\r\n          <div className='navbar-selected'>\r\n              {algoOrDatastruct}\r\n          </div>\r\n          <div className='menu-icon' onClick={() => setClick(!click)}>\r\n              <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n          </div>\r\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n              {algoOrDatastruct.includes(\"algorithm\") &&\r\n              <li className='nav-item'>\r\n                      <div className={drawingDone ? (algoSelectedOption !== \"Select nodes\" ? 'nav-links' : 'nav-li-unclickable') : \"nav-li-unclick-2\"} onClick={drawingDone ? function() {setClick(false); setAlgoSelectedOption(\"Select nodes\"); } : function() {}}>\r\n                          Select nodes\r\n                      </div>\r\n                      <div className={drawingDone ? (algoSelectedOption !== \"Add walls\" ? 'nav-links' : 'nav-li-unclickable') : \"nav-li-unclick-2\"} onClick={drawingDone ? function() {setClick(false); setAlgoSelectedOption(\"Add walls\"); } : function() {}}>\r\n                          Add walls\r\n                      </div>\r\n                      <div className={drawingDone ? (algoSelectedOption !== \"Add weights\" ? 'nav-links' : 'nav-li-unclickable') : \"nav-li-unclick-2\"} onClick={drawingDone ? function() {setClick(false); setAlgoSelectedOption(\"Add weights\"); } : function() {}}>\r\n                          Add weights\r\n                      </div>\r\n              </li>}\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownAlgorithms} onMouseLeave={onMouseLeaveDropdownAlgorithms}>\r\n                  <div className='nav-links' onClick={() => setClick(false)}>\r\n                      Pathfinder Algorithms <i className='fas fa-caret-down' />\r\n                  </div>\r\n                  {dropdownAlgorithms && \r\n                  <ul className='dropdown-menu'>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"BFS algorithm selected\"); setDropdownPickedSort(false); setDropdownPickedSearch(false); setDropdownPicked(true); setAlgoSelectedOption(\"Select nodes\"); partialReset(); }}>\r\n                              Breadth-First Search\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"DFS algorithm selected\"); setDropdownPickedSort(false); setDropdownPickedSearch(false); setDropdownPicked(true); setAlgoSelectedOption(\"Select nodes\"); partialReset(); }}>\r\n                              Depth-First Search\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"GBFS algorithm selected\"); setDropdownPickedSort(false); setDropdownPickedSearch(false); setDropdownPicked(true); setAlgoSelectedOption(\"Select nodes\"); partialReset(); }}>\r\n                              Greedy Best-First Search\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {setAlgoOrDatastruct(\"A* algorithm selected\"); setDropdownPickedSort(false); setDropdownPickedSearch(false); setDropdownPicked(true); setAlgoSelectedOption(\"Select nodes\"); partialReset(); }}>\r\n                              A* Search\r\n                          </div>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownSearchAlgorithms} onMouseLeave={onMouseLeaveDropdownSearchAlgorithms}>\r\n                  <div className='nav-links' onClick={() => setClick(false)}>\r\n                      Search &amp; Sort Algorithms <i className='fas fa-caret-down' />\r\n                  </div>\r\n                  {dropdownSearchAlgorithms && \r\n                  <ul className='dropdown-menu'>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {defineSearchNumbers(); partialSearchReset(); setAlgoOrDatastruct(\"Linear search selected\"); setDropdownPickedSort(false); setDropdownPicked(false); setDropdownPickedSearch(true); }}>\r\n                              Linear search\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {defineSearchNumbers(); partialSearchReset(); setAlgoOrDatastruct(\"Binary search selected\"); setDropdownPickedSort(false); setDropdownPicked(false); setDropdownPickedSearch(true); }}>\r\n                              Binary search\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {defineSearchNumbers(); partialSearchReset(); setAlgoOrDatastruct(\"Jump search selected\"); setDropdownPickedSort(false); setDropdownPicked(false); setDropdownPickedSearch(true); }}>\r\n                              Jump search\r\n                          </div>\r\n                      </li>\r\n                      <div className=\"divider\"/>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {partialSortReset(); setAlgoOrDatastruct(\"Quick sort selected\"); setDropdownPicked(false); setDropdownPickedSearch(false); setDropdownPickedSort(true); }}>\r\n                              Quick sort\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {partialSortReset(); setAlgoOrDatastruct(\"Merge sort selected\"); setDropdownPicked(false); setDropdownPickedSearch(false); setDropdownPickedSort(true); }}>\r\n                              Merge sort\r\n                          </div>\r\n                      </li>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() {partialSortReset();setAlgoOrDatastruct(\"Bubble sort selected\"); setDropdownPicked(false); setDropdownPickedSearch(false); setDropdownPickedSort(true); }}>\r\n                              Bubble sort\r\n                          </div>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item' onMouseEnter={onMouseEnterDropdownDatastructures} onMouseLeave={onMouseLeaveDropdownDatastructures}>\r\n                  <div className='nav-links' onClick={() => setClick(false)}>\r\n                      Data Structures <i className='fas fa-caret-down' />\r\n                  </div>\r\n                  {dropdownDatastructures && \r\n                  <ul className='dropdown-menu'>\r\n                      <li>\r\n                          <div className=\"dropdown-link\" onClick={function() { setDropdownPickedDatastructures(!dropdownPickedDatastructures); }}>\r\n                              Nothing implemented yet\r\n                          </div>\r\n                      </li>\r\n                  </ul>\r\n                  }\r\n              </li>\r\n              <li className='nav-item'>\r\n                  <div className='nav-links-mobile' onClick={() => setClick(false)}>\r\n                      Dropdowns and buttons not yet implemented\r\n                  </div>\r\n              </li>\r\n          </ul>\r\n          <div>\r\n              <button className={drawingDone ? 'btn' : 'bt-done'} onClick={drawingDone ? function() {setClick(false); reset(); } : function() {}}>\r\n                  Reset\r\n              </button>\r\n          </div>\r\n      </nav>\r\n      {footer(sortFound, searchAlgoFound, algoOrDatastruct, dropdownPickedSearch, dropdownPickedSort, dropdownPicked, startSelected, goalSelected, start, goal)}\r\n      {legend(dropdownPickedSort, sortFinished, searchAlgoFound, isTarget, dropdownPickedSearch, searchTargetSelected, dropdownPicked, startSelected, goalSelected, colorOfRange, goalColor, algoSelectedOption, walls, weights)}\r\n      {drawWalls(walls, true)}\r\n      {drawWeights(weights, true)}\r\n      {(dropdownPickedSort || dropdownPickedSearch) && sortComponents(dropdownPickedSort)}\r\n      {dropdownPickedSort && drawSortData(sortData, sortFinished)}\r\n      {dropdownPickedSearch && drawAlgoSearchNumbers(searchNumbers, screenWidthHeight[0])}\r\n      {dropdownPickedSearch && !searchTargetSelected && pickTargets(hoverBox, false, 0, \"Select nodes\")}\r\n      {searchAlgoFound && drawAlgoSearch(algoSearchData, screenWidthHeight[0])}\r\n      {searchTargetSelected && drawStartAndGoal(searchTarget, false, isTarget ? -1 : -2)}\r\n      {!goalSelected && dropdownPicked && pickTargets(hoverBox, startSelected, colorOfRange, algoSelectedOption)}\r\n      {startSelected && drawStartAndGoal(start, false, 0)}\r\n      {goalSelected && drawStartAndGoal(goal, true, goalColor)}\r\n      {pathFound && drawSearch(positions, true)}\r\n      {pathFound && drawSearch(alreadyDrawn, false)}\r\n      {pathFound && drawPath(positionsPath, true)}\r\n      {pathFound && drawPath(alreadyDrawnPath, false)}\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}